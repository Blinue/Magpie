<Application x:Class="Magpie.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="using:Magpie"
             xmlns:muxc="using:Microsoft.UI.Xaml.Controls">
	<Application.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<muxc:XamlControlsResources ControlsResourcesVersion="Version2" />
				<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
				                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
				                    xmlns:local="using:Magpie">

					<x:Double x:Key="DefaultIconSize">16</x:Double>
					<x:Double x:Key="SmallIconSize">12</x:Double>
					<Style x:Key="DefaultTextKeyVisualStyle"
					       TargetType="local:KeyVisual">
						<Setter Property="MinWidth" Value="56" />
						<Setter Property="MinHeight" Value="48" />
						<Setter Property="Background" Value="{ThemeResource AccentButtonBackground}" />
						<Setter Property="Foreground" Value="{ThemeResource AccentButtonForeground}" />
						<Setter Property="BorderBrush" Value="{ThemeResource AccentButtonBorderBrush}" />
						<Setter Property="BorderThickness" Value="{ThemeResource ButtonBorderThemeThickness}" />
						<Setter Property="Padding" Value="16,8,16,8" />
						<Setter Property="FontWeight" Value="SemiBold" />
						<Setter Property="HorizontalAlignment" Value="Center" />
						<Setter Property="HorizontalContentAlignment" Value="Center" />
						<Setter Property="FontSize" Value="18" />
						<Setter Property="Template">
							<Setter.Value>
								<ControlTemplate TargetType="local:KeyVisual">
									<Grid>
										<Grid>
											<Rectangle x:Name="ContentHolder"
											           Height="{TemplateBinding Height}"
											           MinWidth="{TemplateBinding MinWidth}"
											           Fill="{TemplateBinding Background}"
											           RadiusX="4"
											           RadiusY="4"
											           Stroke="{TemplateBinding BorderBrush}"
											           StrokeThickness="{TemplateBinding BorderThickness}" />
											<ContentPresenter x:Name="KeyPresenter"
											                  Margin="{TemplateBinding Padding}"
											                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
											                  VerticalAlignment="Center"
											                  FontSize="{TemplateBinding FontSize}"
											                  FontWeight="{TemplateBinding FontWeight}"
											                  Foreground="{TemplateBinding Foreground}" />
										</Grid>
										<VisualStateManager.VisualStateGroups>
											<VisualStateGroup x:Name="CommonStates">
												<VisualState x:Name="Normal" />
												<VisualState x:Name="Disabled">
													<VisualState.Setters>
														<Setter Target="ContentHolder.Fill" Value="{ThemeResource AccentButtonBackgroundDisabled}" />
														<Setter Target="KeyPresenter.Foreground" Value="{ThemeResource AccentButtonForegroundDisabled}" />
														<Setter Target="ContentHolder.Stroke" Value="{ThemeResource AccentButtonBorderBrushDisabled}" />
														<!--<Setter Target="ContentHolder.StrokeThickness" Value="{TemplateBinding BorderThickness}" />-->
													</VisualState.Setters>
												</VisualState>
											</VisualStateGroup>
											<VisualStateGroup x:Name="StateStates">
												<VisualState x:Name="Default" />
												<VisualState x:Name="Error">
													<VisualState.Setters>
														<Setter Target="ContentHolder.Fill" Value="{ThemeResource InfoBarErrorSeverityBackgroundBrush}" />
														<Setter Target="KeyPresenter.Foreground" Value="{ThemeResource InfoBarErrorSeverityIconBackground}" />
														<Setter Target="ContentHolder.Stroke" Value="{ThemeResource InfoBarErrorSeverityIconBackground}" />
														<Setter Target="ContentHolder.StrokeThickness" Value="2" />
													</VisualState.Setters>
												</VisualState>
											</VisualStateGroup>
										</VisualStateManager.VisualStateGroups>
									</Grid>
								</ControlTemplate>
							</Setter.Value>
						</Setter>
					</Style>

					<Style x:Key="SmallTextKeyVisualStyle"
					       BasedOn="{StaticResource DefaultTextKeyVisualStyle}"
					       TargetType="local:KeyVisual">
						<Setter Property="MinWidth" Value="40" />
						<Setter Property="Height" Value="36" />
						<Setter Property="FontWeight" Value="SemiBold" />
						<Setter Property="Padding" Value="12,0,12,2" />
						<Setter Property="FontSize" Value="14" />
						<Setter Property="HorizontalContentAlignment" Value="Center" />
					</Style>

					<Style x:Key="SmallOutlineTextKeyVisualStyle"
					       BasedOn="{StaticResource DefaultTextKeyVisualStyle}"
					       TargetType="local:KeyVisual">
						<Setter Property="MinWidth" Value="40" />
						<Setter Property="Background" Value="{ThemeResource ButtonBackground}" />
						<Setter Property="Foreground" Value="{ThemeResource ButtonForeground}" />
						<Setter Property="BorderBrush" Value="{ThemeResource ButtonBorderBrush}" />
						<Setter Property="Height" Value="36" />
						<Setter Property="FontWeight" Value="SemiBold" />
						<Setter Property="Padding" Value="8,0,8,2" />
						<Setter Property="FontSize" Value="13" />
						<Setter Property="HorizontalContentAlignment" Value="Center" />
					</Style>


					<Style x:Key="DefaultIconKeyVisualStyle"
					       BasedOn="{StaticResource DefaultTextKeyVisualStyle}"
					       TargetType="local:KeyVisual">
						<Setter Property="MinWidth" Value="56" />
						<Setter Property="MinHeight" Value="48" />
						<Setter Property="FontFamily" Value="{ThemeResource SymbolThemeFontFamily}" />
						<Setter Property="Padding" Value="16,8,16,8" />
						<Setter Property="FontSize" Value="14" />
						<Setter Property="HorizontalContentAlignment" Value="Center" />
					</Style>

					<Style x:Key="SmallIconKeyVisualStyle"
					       BasedOn="{StaticResource DefaultTextKeyVisualStyle}"
					       TargetType="local:KeyVisual">
						<Setter Property="MinWidth" Value="40" />
						<Setter Property="Height" Value="36" />
						<Setter Property="FontFamily" Value="{ThemeResource SymbolThemeFontFamily}" />
						<Setter Property="FontWeight" Value="Normal" />
						<Setter Property="Padding" Value="0" />
						<Setter Property="FontSize" Value="10" />
						<Setter Property="HorizontalContentAlignment" Value="Center" />
					</Style>

					<Style x:Key="SmallOutlineIconKeyVisualStyle"
					       BasedOn="{StaticResource DefaultTextKeyVisualStyle}"
					       TargetType="local:KeyVisual">
						<Setter Property="MinWidth" Value="40" />
						<Setter Property="Background" Value="{ThemeResource ButtonBackground}" />
						<Setter Property="Foreground" Value="{ThemeResource ButtonForeground}" />
						<Setter Property="BorderBrush" Value="{ThemeResource ButtonBorderBrush}" />
						<Setter Property="FontFamily" Value="{ThemeResource SymbolThemeFontFamily}" />
						<Setter Property="Height" Value="36" />
						<Setter Property="FontWeight" Value="SemiBold" />
						<Setter Property="Padding" Value="0" />
						<Setter Property="FontSize" Value="9" />
						<Setter Property="HorizontalContentAlignment" Value="Center" />
					</Style>
				</ResourceDictionary>

				<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
				                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
				                    xmlns:local="using:Magpie"
				                    xmlns:muxc="using:Microsoft.UI.Xaml.Controls">

					<ResourceDictionary.ThemeDictionaries>
						<ResourceDictionary x:Key="Default">
							<StaticResource x:Key="SettingsCardBackground"
							                ResourceKey="CardBackgroundFillColorDefaultBrush" />
							<StaticResource x:Key="SettingsCardBackgroundPointerOver"
							                ResourceKey="ControlFillColorSecondaryBrush" />
							<StaticResource x:Key="SettingsCardBackgroundPressed"
							                ResourceKey="ControlFillColorTertiaryBrush" />
							<StaticResource x:Key="SettingsCardBackgroundDisabled"
							                ResourceKey="ControlFillColorDisabledBrush" />

							<StaticResource x:Key="SettingsCardForeground"
							                ResourceKey="TextFillColorPrimaryBrush" />
							<StaticResource x:Key="SettingsCardForegroundPointerOver"
							                ResourceKey="TextFillColorPrimaryBrush" />
							<StaticResource x:Key="SettingsCardForegroundPressed"
							                ResourceKey="TextFillColorSecondaryBrush" />
							<StaticResource x:Key="SettingsCardForegroundDisabled"
							                ResourceKey="TextFillColorDisabledBrush" />

							<StaticResource x:Key="SettingsCardBorderBrush"
							                ResourceKey="CardStrokeColorDefaultBrush" />
							<StaticResource x:Key="SettingsCardBorderBrushPointerOver"
							                ResourceKey="ControlElevationBorderBrush" />
							<StaticResource x:Key="SettingsCardBorderBrushPressed"
							                ResourceKey="ControlStrokeColorDefaultBrush" />
							<StaticResource x:Key="SettingsCardBorderBrushDisabled"
							                ResourceKey="ControlStrokeColorDefaultBrush" />
						</ResourceDictionary>

						<ResourceDictionary x:Key="Light">
							<StaticResource x:Key="SettingsCardBackground"
							                ResourceKey="CardBackgroundFillColorDefaultBrush" />
							<StaticResource x:Key="SettingsCardBackgroundPointerOver"
							                ResourceKey="ControlFillColorSecondaryBrush" />
							<StaticResource x:Key="SettingsCardBackgroundPressed"
							                ResourceKey="ControlFillColorTertiaryBrush" />
							<StaticResource x:Key="SettingsCardBackgroundDisabled"
							                ResourceKey="ControlFillColorDisabledBrush" />

							<StaticResource x:Key="SettingsCardForeground"
							                ResourceKey="TextFillColorPrimaryBrush" />
							<StaticResource x:Key="SettingsCardForegroundPointerOver"
							                ResourceKey="TextFillColorPrimaryBrush" />
							<StaticResource x:Key="SettingsCardForegroundPressed"
							                ResourceKey="TextFillColorSecondaryBrush" />
							<StaticResource x:Key="SettingsCardForegroundDisabled"
							                ResourceKey="TextFillColorDisabledBrush" />

							<StaticResource x:Key="SettingsCardBorderBrush"
							                ResourceKey="CardStrokeColorDefaultBrush" />
							<StaticResource x:Key="SettingsCardBorderBrushPointerOver"
							                ResourceKey="ControlElevationBorderBrush" />
							<StaticResource x:Key="SettingsCardBorderBrushPressed"
							                ResourceKey="ControlStrokeColorDefaultBrush" />
							<StaticResource x:Key="SettingsCardBorderBrushDisabled"
							                ResourceKey="ControlStrokeColorDefaultBrush" />
						</ResourceDictionary>
					</ResourceDictionary.ThemeDictionaries>
					<Thickness x:Key="SettingsCardBorderThickness">1</Thickness>
					<Thickness x:Key="SettingsCardPadding">16,16,16,16</Thickness>
					<x:Double x:Key="SettingsCardMinWidth">148</x:Double>
					<x:Double x:Key="SettingsCardMinHeight">68</x:Double>
					<x:Double x:Key="SettingsCardHeaderIconMaxSize">20</x:Double>
					<x:Double x:Key="SettingsCardLeftIndention">0</x:Double>
					<x:Double x:Key="SettingsCardContentMinWidth">200</x:Double>
					<Thickness x:Key="SettingsCardHeaderIconMargin">2,0,20,0</Thickness>
					<Thickness x:Key="SettingsCardActionIconMargin">14,0,0,0</Thickness>
					<x:Double x:Key="SettingsCardActionIconMaxSize">13</x:Double>
					<x:Double x:Key="SettingsCardVerticalHeaderContentSpacing">8</x:Double>
					<x:Double x:Key="SettingsCardWrapThreshold">476</x:Double>
					<x:Double x:Key="SettingsCardWrapNoIconThreshold">286</x:Double>

					<Style BasedOn="{StaticResource DefaultSettingsCardStyle}"
					       TargetType="local:SettingsCard" />

					<Style x:Key="DefaultSettingsCardStyle"
					       TargetType="local:SettingsCard">
						<Style.Setters>
							<Setter Property="Background" Value="{ThemeResource SettingsCardBackground}" />
							<Setter Property="Foreground" Value="{ThemeResource SettingsCardForeground}" />
							<Setter Property="BorderBrush" Value="{ThemeResource SettingsCardBorderBrush}" />
							<Setter Property="BorderThickness" Value="{ThemeResource SettingsCardBorderThickness}" />
							<Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
							<Setter Property="MinHeight" Value="{ThemeResource SettingsCardMinHeight}" />
							<Setter Property="MinWidth" Value="{ThemeResource SettingsCardMinWidth}" />
							<Setter Property="IsTabStop" Value="False" />
							<Setter Property="HorizontalAlignment" Value="Stretch" />
							<Setter Property="HorizontalContentAlignment" Value="Right" />
							<Setter Property="VerticalAlignment" Value="Center" />
							<Setter Property="BackgroundSizing" Value="InnerBorderEdge" />
							<Setter Property="Padding" Value="{ThemeResource SettingsCardPadding}" />
							<Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
							<Setter Property="FontWeight" Value="Normal" />
							<Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
							<Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
							<Setter Property="FocusVisualMargin" Value="-3" />
							<Setter Property="Template">
								<Setter.Value>
									<ControlTemplate TargetType="local:SettingsCard">
										<Grid x:Name="PART_RootGrid"
										      MinWidth="{TemplateBinding MinWidth}"
										      MinHeight="{TemplateBinding MinHeight}"
										      MaxWidth="{TemplateBinding MaxWidth}"
										      Padding="{TemplateBinding Padding}"
										      HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
										      VerticalAlignment="{TemplateBinding VerticalAlignment}"
										      muxc:AnimatedIcon.State="Normal"
										      Background="{TemplateBinding Background}"
										      BackgroundSizing="{TemplateBinding BackgroundSizing}"
										      BorderBrush="{TemplateBinding BorderBrush}"
										      BorderThickness="{TemplateBinding BorderThickness}"
										      CornerRadius="{TemplateBinding CornerRadius}">
											<Grid.Resources>
												<!--  这些样式是不起作用的，用于复制到控件本身的样式中  -->

												<!--  Making sure ToggleSwitches are right-aligned by default  -->
												<Style BasedOn="{StaticResource RightAlignedCompactToggleSwitchStyle}"
												       TargetType="ToggleSwitch" />

												<!--  Overriding the MinWidth of various types of controls so they neatly align  -->
												<Style BasedOn="{StaticResource DefaultSliderStyle}"
												       TargetType="Slider">
													<Style.Setters>
														<Setter Property="MinWidth" Value="{StaticResource SettingsCardContentMinWidth}" />
													</Style.Setters>
												</Style>
												<Style BasedOn="{StaticResource DefaultComboBoxStyle}"
												       TargetType="ComboBox">
													<Style.Setters>
														<Setter Property="MinWidth" Value="{StaticResource SettingsCardContentMinWidth}" />
													</Style.Setters>
												</Style>
												<Style BasedOn="{StaticResource DefaultTextBoxStyle}"
												       TargetType="TextBox">
													<Style.Setters>
														<Setter Property="MinWidth" Value="{StaticResource SettingsCardContentMinWidth}" />
													</Style.Setters>
												</Style>
												<Style TargetType="muxc:NumberBox">
													<Style.Setters>
														<Setter Property="MinWidth" Value="{StaticResource SettingsCardContentMinWidth}" />
													</Style.Setters>
												</Style>
											</Grid.Resources>
											<Grid.RowDefinitions>
												<RowDefinition Height="*" />
												<RowDefinition Height="Auto" />
											</Grid.RowDefinitions>
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="Auto"
												                  MinWidth="{ThemeResource SettingsCardLeftIndention}" />
												<ColumnDefinition Width="*" />
												<ColumnDefinition Width="Auto" />
												<ColumnDefinition Width="Auto" />
											</Grid.ColumnDefinitions>

											<Viewbox x:Name="PART_HeaderIconPresenterHolder"
											         Grid.RowSpan="1"
											         MaxWidth="{ThemeResource SettingsCardHeaderIconMaxSize}"
											         MaxHeight="{ThemeResource SettingsCardHeaderIconMaxSize}"
											         Margin="{ThemeResource SettingsCardHeaderIconMargin}">
												<ContentPresenter x:Name="PART_HeaderIconPresenter"
												                  Content="{TemplateBinding HeaderIcon}" />
											</Viewbox>

											<local:SimpleStackPanel x:Name="HeaderPanel"
											                        Grid.Column="1"
											                        Margin="0,0,24,0"
											                        VerticalAlignment="Center">
												<ContentPresenter x:Name="PART_HeaderPresenter"
												                  Grid.Column="1"
												                  HorizontalAlignment="Left"
												                  Content="{TemplateBinding Header}"
												                  TextWrapping="Wrap" />

												<ContentPresenter x:Name="PART_DescriptionPresenter"
												                  Content="{TemplateBinding Description}"
												                  FontSize="{StaticResource SecondaryTextFontSize}"
												                  Foreground="{ThemeResource TextFillColorSecondaryBrush}"
												                  TextWrapping="Wrap">
													<ContentPresenter.Resources>
														<Style BasedOn="{StaticResource CaptionTextBlockStyle}"
														       TargetType="TextBlock">
															<Style.Setters>
																<Setter Property="TextWrapping" Value="Wrap" />
															</Style.Setters>
														</Style>
														<Style BasedOn="{StaticResource DefaultHyperlinkButtonStyle}"
														       TargetType="HyperlinkButton">
															<Style.Setters>
																<Setter Property="FontSize" Value="{StaticResource SecondaryTextFontSize}" />
																<Setter Property="Padding" Value="0,0,0,-1" />
																<Setter Property="FontWeight" Value="SemiBold" />
															</Style.Setters>
														</Style>
														<Style TargetType="Hyperlink">
															<Style.Setters>
																<Setter Property="UnderlineStyle" Value="None" />
																<Setter Property="TextDecorations" Value="None" />
																<Setter Property="FontWeight" Value="SemiBold" />
															</Style.Setters>
														</Style>
													</ContentPresenter.Resources>
												</ContentPresenter>
											</local:SimpleStackPanel>

											<ContentPresenter x:Name="PART_ContentPresenter"
											                  Grid.Column="2"
											                  HorizontalAlignment="Right"
											                  VerticalAlignment="Center"
											                  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
											                  Content="{TemplateBinding Content}" />

											<Viewbox x:Name="PART_ActionIconPresenterHolder"
											         Grid.RowSpan="2"
											         Grid.Column="3"
											         MaxWidth="{ThemeResource SettingsCardActionIconMaxSize}"
											         MaxHeight="{ThemeResource SettingsCardActionIconMaxSize}"
											         Margin="{ThemeResource SettingsCardActionIconMargin}"
											         HorizontalAlignment="Center"
											         VerticalAlignment="Center"
											         Visibility="Collapsed">
												<ContentPresenter x:Name="PART_ActionIconPresenter"
												                  Content="{TemplateBinding ActionIcon}"
												                  FontFamily="{ThemeResource SymbolThemeFontFamily}"
												                  ToolTipService.ToolTip="{TemplateBinding ActionIconToolTip}" />
											</Viewbox>
											<VisualStateManager.VisualStateGroups>
												<VisualStateGroup x:Name="CommonStates">
													<VisualState x:Name="Normal" />
													<VisualState x:Name="PointerOver">
														<Storyboard>
															<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_RootGrid"
															                               Storyboard.TargetProperty="Background">
																<DiscreteObjectKeyFrame KeyTime="0"
																                        Value="{ThemeResource SettingsCardBackgroundPointerOver}" />
															</ObjectAnimationUsingKeyFrames>
															<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_RootGrid"
															                               Storyboard.TargetProperty="BorderBrush">
																<DiscreteObjectKeyFrame KeyTime="0"
																                        Value="{ThemeResource SettingsCardBorderBrushPointerOver}" />
															</ObjectAnimationUsingKeyFrames>
															<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_HeaderPresenter"
															                               Storyboard.TargetProperty="Foreground">
																<DiscreteObjectKeyFrame KeyTime="0"
																                        Value="{ThemeResource SettingsCardForegroundPointerOver}" />
															</ObjectAnimationUsingKeyFrames>
															<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_HeaderIconPresenter"
															                               Storyboard.TargetProperty="Foreground">
																<DiscreteObjectKeyFrame KeyTime="0"
																                        Value="{ThemeResource SettingsCardForegroundPointerOver}" />
															</ObjectAnimationUsingKeyFrames>
														</Storyboard>
														<VisualState.Setters>
															<Setter Target="PART_RootGrid.(muxc:AnimatedIcon.State)" Value="PointerOver" />
														</VisualState.Setters>
													</VisualState>
													<VisualState x:Name="Pressed">
														<Storyboard>
															<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_RootGrid"
															                               Storyboard.TargetProperty="Background">
																<DiscreteObjectKeyFrame KeyTime="0"
																                        Value="{ThemeResource SettingsCardBackgroundPressed}" />
															</ObjectAnimationUsingKeyFrames>
															<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_RootGrid"
															                               Storyboard.TargetProperty="BorderBrush">
																<DiscreteObjectKeyFrame KeyTime="0"
																                        Value="{ThemeResource SettingsCardBorderBrushPressed}" />
															</ObjectAnimationUsingKeyFrames>
															<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_HeaderIconPresenter"
															                               Storyboard.TargetProperty="Foreground">
																<DiscreteObjectKeyFrame KeyTime="0"
																                        Value="{ThemeResource SettingsCardForegroundPressed}" />
															</ObjectAnimationUsingKeyFrames>
															<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_HeaderPresenter"
															                               Storyboard.TargetProperty="Foreground">
																<DiscreteObjectKeyFrame KeyTime="0"
																                        Value="{ThemeResource SettingsCardForegroundPressed}" />
															</ObjectAnimationUsingKeyFrames>
															<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_DescriptionPresenter"
															                               Storyboard.TargetProperty="Foreground">
																<DiscreteObjectKeyFrame KeyTime="0"
																                        Value="{ThemeResource SettingsCardForegroundPressed}" />
															</ObjectAnimationUsingKeyFrames>
														</Storyboard>
														<VisualState.Setters>
															<Setter Target="PART_RootGrid.(muxc:AnimatedIcon.State)" Value="Pressed" />
														</VisualState.Setters>
													</VisualState>
													<VisualState x:Name="Disabled">
														<Storyboard>
															<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ActionIconPresenter"
															                               Storyboard.TargetProperty="Foreground">
																<DiscreteObjectKeyFrame KeyTime="0"
																                        Value="{ThemeResource SettingsCardForegroundDisabled}" />
															</ObjectAnimationUsingKeyFrames>
															<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_HeaderIconPresenter"
															                               Storyboard.TargetProperty="Foreground">
																<DiscreteObjectKeyFrame KeyTime="0"
																                        Value="{ThemeResource SettingsCardForegroundDisabled}" />
															</ObjectAnimationUsingKeyFrames>
															<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_HeaderPresenter"
															                               Storyboard.TargetProperty="Foreground">
																<DiscreteObjectKeyFrame KeyTime="0"
																                        Value="{ThemeResource SettingsCardForegroundDisabled}" />
															</ObjectAnimationUsingKeyFrames>
															<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_DescriptionPresenter"
															                               Storyboard.TargetProperty="Foreground">
																<DiscreteObjectKeyFrame KeyTime="0"
																                        Value="{ThemeResource SettingsCardForegroundDisabled}" />
															</ObjectAnimationUsingKeyFrames>
															<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ContentPresenter"
															                               Storyboard.TargetProperty="Foreground">
																<DiscreteObjectKeyFrame KeyTime="0"
																                        Value="{ThemeResource SettingsCardForegroundDisabled}" />
															</ObjectAnimationUsingKeyFrames>
														</Storyboard>
														<VisualState.Setters>
															<!--  DisabledVisual Should be handled by the control, not the animated icon.  -->
															<Setter Target="PART_RootGrid.(muxc:AnimatedIcon.State)" Value="Normal" />
														</VisualState.Setters>
													</VisualState>
												</VisualStateGroup>

												<VisualStateGroup x:Name="ContentAlignmentStates">
													<!--  Default  -->
													<VisualState x:Name="Right" />

													<!--  Whenever the control width is less than SettingsCardWrapThreshold, the Content is below the Header/Description  -->
													<VisualState x:Name="RightWrapped">
														<VisualState.StateTriggers>
															<local:ControlSizeTrigger x:Name="RightWrappedTrigger"
															                          MinWidth="{ThemeResource SettingsCardWrapNoIconThreshold}"
															                          MaxWidth="{ThemeResource SettingsCardWrapThreshold}"
															                          TargetElement="{Binding ElementName=PART_RootGrid}" />
														</VisualState.StateTriggers>
														<VisualState.Setters>
															<Setter Target="PART_ContentPresenter.(Grid.Row)" Value="1" />
															<Setter Target="PART_ContentPresenter.(Grid.Column)" Value="1" />
															<Setter Target="PART_ContentPresenter.HorizontalAlignment" Value="Stretch" />
															<Setter Target="PART_ContentPresenter.HorizontalContentAlignment" Value="Left" />
															<Setter Target="HeaderPanel.Margin" Value="0" />
														</VisualState.Setters>
													</VisualState>

													<!--  For even smaller widths: the HeaderIcon is collapsed.  -->
													<VisualState x:Name="RightWrappedNoIcon">
														<VisualState.StateTriggers>
															<local:ControlSizeTrigger x:Name="RightWrappedNoIconTrigger"
															                          MaxWidth="{ThemeResource SettingsCardWrapNoIconThreshold}"
															                          CanTrigger="{TemplateBinding IsWrapEnabled}"
															                          TargetElement="{Binding ElementName=PART_RootGrid}" />
														</VisualState.StateTriggers>
														<VisualState.Setters>
															<Setter Target="PART_HeaderIconPresenterHolder.Visibility" Value="Collapsed" />
															<Setter Target="PART_ContentPresenter.(Grid.Row)" Value="1" />
															<Setter Target="PART_ContentPresenter.(Grid.Column)" Value="1" />
															<Setter Target="PART_ContentPresenter.HorizontalAlignment" Value="Stretch" />
															<Setter Target="PART_ContentPresenter.HorizontalContentAlignment" Value="Left" />
															<Setter Target="HeaderPanel.Margin" Value="0" />
														</VisualState.Setters>
													</VisualState>

													<!--  Header/Description/Icon collapsed, content is to the left. Great for e.g. Checkboxes  -->
													<VisualState x:Name="Left">
														<VisualState.StateTriggers>
															<local:IsEqualStateTrigger Value="{Binding ContentAlignment, RelativeSource={RelativeSource TemplatedParent}}">
																<local:IsEqualStateTrigger.To>
																	<local:ContentAlignment>Left</local:ContentAlignment>
																</local:IsEqualStateTrigger.To>
															</local:IsEqualStateTrigger>
														</VisualState.StateTriggers>
														<VisualState.Setters>
															<Setter Target="PART_HeaderIconPresenterHolder.Visibility" Value="Collapsed" />
															<Setter Target="PART_DescriptionPresenter.Visibility" Value="Collapsed" />
															<Setter Target="PART_HeaderPresenter.Visibility" Value="Collapsed" />
															<Setter Target="PART_ContentPresenter.(Grid.Row)" Value="1" />
															<Setter Target="PART_ContentPresenter.(Grid.Column)" Value="1" />
															<Setter Target="PART_ContentPresenter.HorizontalAlignment" Value="Left" />
														</VisualState.Setters>
													</VisualState>

													<!--  Similiar to Left, but the HeaderIcon/Header/Description is visible  -->
													<VisualState x:Name="Vertical">
														<VisualState.StateTriggers>
															<local:IsEqualStateTrigger Value="{Binding ContentAlignment, RelativeSource={RelativeSource TemplatedParent}}">
																<local:IsEqualStateTrigger.To>
																	<local:ContentAlignment>Vertical</local:ContentAlignment>
																</local:IsEqualStateTrigger.To>
															</local:IsEqualStateTrigger>
														</VisualState.StateTriggers>
														<VisualState.Setters>
															<Setter Target="PART_ContentPresenter.(Grid.Row)" Value="1" />
															<Setter Target="PART_ContentPresenter.(Grid.Column)" Value="1" />
															<Setter Target="PART_ContentPresenter.HorizontalAlignment" Value="Stretch" />
															<Setter Target="PART_ContentPresenter.HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource TemplatedParent}}" />
														</VisualState.Setters>
													</VisualState>
												</VisualStateGroup>

												<!--  Collapsing the Content presenter whenever it's empty  -->
												<VisualStateGroup x:Name="ContentVisibilityStates">
													<VisualState x:Name="Visible" />
													<VisualState x:Name="Collapsed">
														<VisualState.StateTriggers>
															<local:IsNullStateTrigger Value="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" />
														</VisualState.StateTriggers>
														<VisualState.Setters>
															<Setter Target="PART_ContentPresenter.Visibility" Value="Collapsed" />
														</VisualState.Setters>
													</VisualState>
												</VisualStateGroup>

												<VisualStateGroup x:Name="ContentSpacingStates">
													<VisualState x:Name="NoContentSpacing" />
													<VisualState x:Name="ContentSpacing">
														<VisualState.Setters>
															<Setter Target="PART_RootGrid.RowSpacing" Value="{ThemeResource SettingsCardVerticalHeaderContentSpacing}" />
														</VisualState.Setters>
													</VisualState>
												</VisualStateGroup>
											</VisualStateManager.VisualStateGroups>
										</Grid>
									</ControlTemplate>
								</Setter.Value>
							</Setter>
						</Style.Setters>
					</Style>

					<Style x:Key="RightAlignedCompactToggleSwitchStyle"
					       BasedOn="{StaticResource DefaultToggleSwitchStyle}"
					       TargetType="ToggleSwitch">
						<Style.Setters>
							<Setter Property="MinWidth" Value="0" />
							<Setter Property="Height" Value="36" />
							<Setter Property="HorizontalContentAlignment" Value="Right" />
							<Setter Property="Template">
								<Setter.Value>
									<ControlTemplate TargetType="ToggleSwitch">
										<Grid VerticalAlignment="Stretch"
										      Background="{TemplateBinding Background}"
										      BorderBrush="{TemplateBinding BorderBrush}"
										      BorderThickness="{TemplateBinding BorderThickness}"
										      Control.IsTemplateFocusTarget="True"
										      CornerRadius="{TemplateBinding CornerRadius}">
											<ContentPresenter x:Name="HeaderContentPresenter"
											                  Grid.Row="0"
											                  Margin="{ThemeResource ToggleSwitchTopHeaderMargin}"
											                  VerticalAlignment="Top"
											                  x:DeferLoadStrategy="Lazy"
											                  Content="{TemplateBinding Header}"
											                  ContentTemplate="{TemplateBinding HeaderTemplate}"
											                  Foreground="{ThemeResource ToggleSwitchHeaderForeground}"
											                  IsHitTestVisible="False"
											                  TextWrapping="Wrap"
											                  Visibility="Collapsed" />
											<Grid Grid.Row="1"
											      HorizontalAlignment="Right"
											      VerticalAlignment="Center">
												<Grid.ColumnDefinitions>
													<ColumnDefinition Width="Auto" />
													<ColumnDefinition Width="12"
													                  MaxWidth="12" />
													<ColumnDefinition Width="Auto" />
												</Grid.ColumnDefinitions>
												<Grid x:Name="SwitchAreaGrid"
												      Grid.RowSpan="3"
												      Grid.ColumnSpan="3"
												      Margin="0,5"
												      Background="{ThemeResource ToggleSwitchContainerBackground}"
												      CornerRadius="{TemplateBinding CornerRadius}" />
												<ContentPresenter x:Name="OffContentPresenter"
												                  Grid.RowSpan="3"
												                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
												                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
												                  Content="{TemplateBinding OffContent}"
												                  ContentTemplate="{TemplateBinding OffContentTemplate}"
												                  Foreground="{TemplateBinding Foreground}"
												                  IsHitTestVisible="False"
												                  Opacity="0" />
												<ContentPresenter x:Name="OnContentPresenter"
												                  Grid.RowSpan="3"
												                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
												                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
												                  Content="{TemplateBinding OnContent}"
												                  ContentTemplate="{TemplateBinding OnContentTemplate}"
												                  Foreground="{TemplateBinding Foreground}"
												                  IsHitTestVisible="False"
												                  Opacity="0" />
												<Rectangle x:Name="OuterBorder"
												           Grid.Row="1"
												           Grid.Column="2"
												           Width="40"
												           Height="20"
												           Fill="{ThemeResource ToggleSwitchFillOff}"
												           RadiusX="10"
												           RadiusY="10"
												           Stroke="{ThemeResource ToggleSwitchStrokeOff}"
												           StrokeThickness="{ThemeResource ToggleSwitchOuterBorderStrokeThickness}" />
												<Rectangle x:Name="SwitchKnobBounds"
												           Grid.Row="1"
												           Grid.Column="2"
												           Width="40"
												           Height="20"
												           Fill="{ThemeResource ToggleSwitchFillOn}"
												           Opacity="0"
												           RadiusX="10"
												           RadiusY="10"
												           Stroke="{ThemeResource ToggleSwitchStrokeOn}"
												           StrokeThickness="{ThemeResource ToggleSwitchOnStrokeThickness}" />
												<Grid x:Name="SwitchKnob"
												      Grid.Row="1"
												      Grid.Column="2"
												      Width="20"
												      Height="20"
												      HorizontalAlignment="Left">
													<Border x:Name="SwitchKnobOn"
													        Width="12"
													        Height="12"
													        Margin="0,0,3,0"
													        HorizontalAlignment="Right"
													        Background="{ThemeResource ToggleSwitchKnobFillOn}"
													        BackgroundSizing="OuterBorderEdge"
													        BorderBrush="{ThemeResource ToggleSwitchKnobStrokeOn}"
													        CornerRadius="7"
													        Opacity="0"
													        RenderTransformOrigin="0.5, 0.5">
														<Border.RenderTransform>
															<CompositeTransform />
														</Border.RenderTransform>
													</Border>
													<Rectangle x:Name="SwitchKnobOff"
													           Width="12"
													           Height="12"
													           Margin="3,0,0,0"
													           HorizontalAlignment="Left"
													           Fill="{ThemeResource ToggleSwitchKnobFillOff}"
													           RadiusX="7"
													           RadiusY="7"
													           RenderTransformOrigin="0.5, 0.5">
														<Rectangle.RenderTransform>
															<CompositeTransform />
														</Rectangle.RenderTransform>
													</Rectangle>
													<Grid.RenderTransform>
														<TranslateTransform x:Name="KnobTranslateTransform" />
													</Grid.RenderTransform>
												</Grid>
												<Thumb x:Name="SwitchThumb"
												       Grid.RowSpan="3"
												       Grid.ColumnSpan="3">
													<Thumb.Template>
														<ControlTemplate TargetType="Thumb">
															<Rectangle Fill="Transparent" />
														</ControlTemplate>
													</Thumb.Template>
												</Thumb>
											</Grid>
											<VisualStateManager.VisualStateGroups>
												<VisualStateGroup x:Name="CommonStates">
													<VisualState x:Name="Normal">
														<Storyboard>
															<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder"
															                               Storyboard.TargetProperty="Stroke">
																<DiscreteObjectKeyFrame KeyTime="0"
																                        Value="{ThemeResource ToggleSwitchStrokeOff}" />
															</ObjectAnimationUsingKeyFrames>
															<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder"
															                               Storyboard.TargetProperty="Fill">
																<DiscreteObjectKeyFrame KeyTime="0"
																                        Value="{ThemeResource ToggleSwitchFillOff}" />
															</ObjectAnimationUsingKeyFrames>
															<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOff"
															                               Storyboard.TargetProperty="Fill">
																<DiscreteObjectKeyFrame KeyTime="0"
																                        Value="{ThemeResource ToggleSwitchKnobFillOff}" />
															</ObjectAnimationUsingKeyFrames>
															<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOn"
															                               Storyboard.TargetProperty="Background">
																<DiscreteObjectKeyFrame KeyTime="0"
																                        Value="{ThemeResource ToggleSwitchKnobFillOn}" />
															</ObjectAnimationUsingKeyFrames>
															<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds"
															                               Storyboard.TargetProperty="Fill">
																<DiscreteObjectKeyFrame KeyTime="0"
																                        Value="{ThemeResource ToggleSwitchFillOn}" />
															</ObjectAnimationUsingKeyFrames>
															<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds"
															                               Storyboard.TargetProperty="Stroke">
																<DiscreteObjectKeyFrame KeyTime="0"
																                        Value="{ThemeResource ToggleSwitchStrokeOn}" />
															</ObjectAnimationUsingKeyFrames>
															<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchAreaGrid"
															                               Storyboard.TargetProperty="Background">
																<DiscreteObjectKeyFrame KeyTime="0"
																                        Value="{ThemeResource ToggleSwitchContainerBackground}" />
															</ObjectAnimationUsingKeyFrames>
															<DoubleAnimationUsingKeyFrames EnableDependentAnimation="True"
															                               Storyboard.TargetName="SwitchKnobOn"
															                               Storyboard.TargetProperty="Width">
																<SplineDoubleKeyFrame KeySpline="{StaticResource ControlFastOutSlowInKeySpline}"
																                      KeyTime="{StaticResource ControlFasterAnimationDuration}"
																                      Value="12" />
															</DoubleAnimationUsingKeyFrames>
															<DoubleAnimationUsingKeyFrames EnableDependentAnimation="True"
															                               Storyboard.TargetName="SwitchKnobOn"
															                               Storyboard.TargetProperty="Height">
																<SplineDoubleKeyFrame KeySpline="{StaticResource ControlFastOutSlowInKeySpline}"
																                      KeyTime="{StaticResource ControlFasterAnimationDuration}"
																                      Value="12" />
															</DoubleAnimationUsingKeyFrames>
															<DoubleAnimationUsingKeyFrames EnableDependentAnimation="True"
															                               Storyboard.TargetName="SwitchKnobOff"
															                               Storyboard.TargetProperty="Width">
																<SplineDoubleKeyFrame KeySpline="{StaticResource ControlFastOutSlowInKeySpline}"
																                      KeyTime="{StaticResource ControlFasterAnimationDuration}"
																                      Value="12" />
															</DoubleAnimationUsingKeyFrames>
															<DoubleAnimationUsingKeyFrames EnableDependentAnimation="True"
															                               Storyboard.TargetName="SwitchKnobOff"
															                               Storyboard.TargetProperty="Height">
																<SplineDoubleKeyFrame KeySpline="{StaticResource ControlFastOutSlowInKeySpline}"
																                      KeyTime="{StaticResource ControlFasterAnimationDuration}"
																                      Value="12" />
															</DoubleAnimationUsingKeyFrames>
														</Storyboard>
													</VisualState>
													<VisualState x:Name="PointerOver">
														<Storyboard>
															<ColorAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder"
															                              Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)">
																<LinearColorKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}"
																                     Value="{ThemeResource ToggleSwitchStrokeOffPointerOver}" />
															</ColorAnimationUsingKeyFrames>
															<ColorAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder"
															                              Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
																<LinearColorKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}"
																                     Value="{ThemeResource ToggleSwitchFillOffPointerOver}" />
															</ColorAnimationUsingKeyFrames>
															<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOff"
															                               Storyboard.TargetProperty="Fill">
																<DiscreteObjectKeyFrame KeyTime="0"
																                        Value="{ThemeResource ToggleSwitchKnobFillOffPointerOver}" />
															</ObjectAnimationUsingKeyFrames>
															<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOn"
															                               Storyboard.TargetProperty="Background">
																<DiscreteObjectKeyFrame KeyTime="0"
																                        Value="{ThemeResource ToggleSwitchKnobFillOnPointerOver}" />
															</ObjectAnimationUsingKeyFrames>
															<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds"
															                               Storyboard.TargetProperty="Fill">
																<DiscreteObjectKeyFrame KeyTime="0"
																                        Value="{ThemeResource ToggleSwitchFillOnPointerOver}" />
															</ObjectAnimationUsingKeyFrames>
															<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds"
															                               Storyboard.TargetProperty="Stroke">
																<DiscreteObjectKeyFrame KeyTime="0"
																                        Value="{ThemeResource ToggleSwitchStrokeOnPointerOver}" />
															</ObjectAnimationUsingKeyFrames>
															<ColorAnimationUsingKeyFrames Storyboard.TargetName="SwitchAreaGrid"
															                              Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
																<LinearColorKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}"
																                     Value="{ThemeResource ToggleSwitchContainerBackgroundPointerOver}" />
															</ColorAnimationUsingKeyFrames>
															<DoubleAnimationUsingKeyFrames EnableDependentAnimation="True"
															                               Storyboard.TargetName="SwitchKnobOn"
															                               Storyboard.TargetProperty="Width">
																<SplineDoubleKeyFrame KeySpline="{StaticResource ControlFastOutSlowInKeySpline}"
																                      KeyTime="{StaticResource ControlFasterAnimationDuration}"
																                      Value="14" />
															</DoubleAnimationUsingKeyFrames>
															<DoubleAnimationUsingKeyFrames EnableDependentAnimation="True"
															                               Storyboard.TargetName="SwitchKnobOn"
															                               Storyboard.TargetProperty="Height">
																<SplineDoubleKeyFrame KeySpline="{StaticResource ControlFastOutSlowInKeySpline}"
																                      KeyTime="{StaticResource ControlFasterAnimationDuration}"
																                      Value="14" />
															</DoubleAnimationUsingKeyFrames>
															<DoubleAnimationUsingKeyFrames EnableDependentAnimation="True"
															                               Storyboard.TargetName="SwitchKnobOff"
															                               Storyboard.TargetProperty="Width">
																<SplineDoubleKeyFrame KeySpline="{StaticResource ControlFastOutSlowInKeySpline}"
																                      KeyTime="{StaticResource ControlFasterAnimationDuration}"
																                      Value="14" />
															</DoubleAnimationUsingKeyFrames>
															<DoubleAnimationUsingKeyFrames EnableDependentAnimation="True"
															                               Storyboard.TargetName="SwitchKnobOff"
															                               Storyboard.TargetProperty="Height">
																<SplineDoubleKeyFrame KeySpline="{StaticResource ControlFastOutSlowInKeySpline}"
																                      KeyTime="{StaticResource ControlFasterAnimationDuration}"
																                      Value="14" />
															</DoubleAnimationUsingKeyFrames>
														</Storyboard>
													</VisualState>
													<VisualState x:Name="Pressed">
														<VisualState.Setters>
															<Setter Target="SwitchKnobOn.HorizontalAlignment" Value="Right" />
															<Setter Target="SwitchKnobOn.Margin" Value="0,0,3,0" />
															<Setter Target="SwitchKnobOff.HorizontalAlignment" Value="Left" />
															<Setter Target="SwitchKnobOff.Margin" Value="3,0,0,0" />
														</VisualState.Setters>
														<Storyboard>
															<ColorAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder"
															                              Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)">
																<LinearColorKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}"
																                     Value="{ThemeResource ToggleSwitchStrokeOffPressed}" />
															</ColorAnimationUsingKeyFrames>
															<ColorAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder"
															                              Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
																<LinearColorKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}"
																                     Value="{ThemeResource ToggleSwitchFillOffPressed}" />
															</ColorAnimationUsingKeyFrames>
															<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds"
															                               Storyboard.TargetProperty="Fill">
																<DiscreteObjectKeyFrame KeyTime="0"
																                        Value="{ThemeResource ToggleSwitchFillOnPressed}" />
															</ObjectAnimationUsingKeyFrames>
															<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds"
															                               Storyboard.TargetProperty="Stroke">
																<DiscreteObjectKeyFrame KeyTime="0"
																                        Value="{ThemeResource ToggleSwitchStrokeOnPressed}" />
															</ObjectAnimationUsingKeyFrames>
															<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOff"
															                               Storyboard.TargetProperty="Fill">
																<DiscreteObjectKeyFrame KeyTime="0"
																                        Value="{ThemeResource ToggleSwitchKnobFillOffPressed}" />
															</ObjectAnimationUsingKeyFrames>
															<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOn"
															                               Storyboard.TargetProperty="Background">
																<DiscreteObjectKeyFrame KeyTime="0"
																                        Value="{ThemeResource ToggleSwitchKnobFillOnPressed}" />
															</ObjectAnimationUsingKeyFrames>
															<ColorAnimationUsingKeyFrames Storyboard.TargetName="SwitchAreaGrid"
															                              Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
																<LinearColorKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}"
																                     Value="{ThemeResource ToggleSwitchContainerBackgroundPressed}" />
															</ColorAnimationUsingKeyFrames>
															<DoubleAnimationUsingKeyFrames EnableDependentAnimation="True"
															                               Storyboard.TargetName="SwitchKnobOn"
															                               Storyboard.TargetProperty="Width">
																<SplineDoubleKeyFrame KeySpline="{StaticResource ControlFastOutSlowInKeySpline}"
																                      KeyTime="{StaticResource ControlFasterAnimationDuration}"
																                      Value="17" />
															</DoubleAnimationUsingKeyFrames>
															<DoubleAnimationUsingKeyFrames EnableDependentAnimation="True"
															                               Storyboard.TargetName="SwitchKnobOn"
															                               Storyboard.TargetProperty="Height">
																<SplineDoubleKeyFrame KeySpline="{StaticResource ControlFastOutSlowInKeySpline}"
																                      KeyTime="{StaticResource ControlFasterAnimationDuration}"
																                      Value="14" />
															</DoubleAnimationUsingKeyFrames>
															<DoubleAnimationUsingKeyFrames EnableDependentAnimation="True"
															                               Storyboard.TargetName="SwitchKnobOff"
															                               Storyboard.TargetProperty="Width">
																<SplineDoubleKeyFrame KeySpline="{StaticResource ControlFastOutSlowInKeySpline}"
																                      KeyTime="{StaticResource ControlFasterAnimationDuration}"
																                      Value="17" />
															</DoubleAnimationUsingKeyFrames>
															<DoubleAnimationUsingKeyFrames EnableDependentAnimation="True"
															                               Storyboard.TargetName="SwitchKnobOff"
															                               Storyboard.TargetProperty="Height">
																<SplineDoubleKeyFrame KeySpline="{StaticResource ControlFastOutSlowInKeySpline}"
																                      KeyTime="{StaticResource ControlFasterAnimationDuration}"
																                      Value="14" />
															</DoubleAnimationUsingKeyFrames>
														</Storyboard>
													</VisualState>
													<VisualState x:Name="Disabled">
														<Storyboard>
															<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderContentPresenter"
															                               Storyboard.TargetProperty="Foreground">
																<DiscreteObjectKeyFrame KeyTime="0"
																                        Value="{ThemeResource ToggleSwitchHeaderForegroundDisabled}" />
															</ObjectAnimationUsingKeyFrames>
															<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OffContentPresenter"
															                               Storyboard.TargetProperty="Foreground">
																<DiscreteObjectKeyFrame KeyTime="0"
																                        Value="{ThemeResource ToggleSwitchContentForegroundDisabled}" />
															</ObjectAnimationUsingKeyFrames>
															<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OnContentPresenter"
															                               Storyboard.TargetProperty="Foreground">
																<DiscreteObjectKeyFrame KeyTime="0"
																                        Value="{ThemeResource ToggleSwitchContentForegroundDisabled}" />
															</ObjectAnimationUsingKeyFrames>
															<ColorAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder"
															                              Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)">
																<LinearColorKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}"
																                     Value="{ThemeResource ToggleSwitchStrokeOffDisabled}" />
															</ColorAnimationUsingKeyFrames>
															<ColorAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder"
															                              Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
																<LinearColorKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}"
																                     Value="{ThemeResource ToggleSwitchFillOffDisabled}" />
															</ColorAnimationUsingKeyFrames>
															<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds"
															                               Storyboard.TargetProperty="Fill">
																<DiscreteObjectKeyFrame KeyTime="0"
																                        Value="{ThemeResource ToggleSwitchFillOnDisabled}" />
															</ObjectAnimationUsingKeyFrames>
															<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds"
															                               Storyboard.TargetProperty="Stroke">
																<DiscreteObjectKeyFrame KeyTime="0"
																                        Value="{ThemeResource ToggleSwitchStrokeOnDisabled}" />
															</ObjectAnimationUsingKeyFrames>
															<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOff"
															                               Storyboard.TargetProperty="Fill">
																<DiscreteObjectKeyFrame KeyTime="0"
																                        Value="{ThemeResource ToggleSwitchKnobFillOffDisabled}" />
															</ObjectAnimationUsingKeyFrames>
															<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOn"
															                               Storyboard.TargetProperty="Background">
																<DiscreteObjectKeyFrame KeyTime="0"
																                        Value="{ThemeResource ToggleSwitchKnobFillOnDisabled}" />
															</ObjectAnimationUsingKeyFrames>
															<ColorAnimationUsingKeyFrames Storyboard.TargetName="SwitchAreaGrid"
															                              Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
																<LinearColorKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}"
																                     Value="{ThemeResource ToggleSwitchContainerBackgroundDisabled}" />
															</ColorAnimationUsingKeyFrames>
															<DoubleAnimationUsingKeyFrames EnableDependentAnimation="True"
															                               Storyboard.TargetName="SwitchKnobOn"
															                               Storyboard.TargetProperty="Width">
																<SplineDoubleKeyFrame KeySpline="{StaticResource ControlFastOutSlowInKeySpline}"
																                      KeyTime="{StaticResource ControlNormalAnimationDuration}"
																                      Value="12" />
															</DoubleAnimationUsingKeyFrames>
															<DoubleAnimationUsingKeyFrames EnableDependentAnimation="True"
															                               Storyboard.TargetName="SwitchKnobOn"
															                               Storyboard.TargetProperty="Height">
																<SplineDoubleKeyFrame KeySpline="{StaticResource ControlFastOutSlowInKeySpline}"
																                      KeyTime="{StaticResource ControlNormalAnimationDuration}"
																                      Value="12" />
															</DoubleAnimationUsingKeyFrames>
															<DoubleAnimationUsingKeyFrames EnableDependentAnimation="True"
															                               Storyboard.TargetName="SwitchKnobOff"
															                               Storyboard.TargetProperty="Width">
																<SplineDoubleKeyFrame KeySpline="{StaticResource ControlFastOutSlowInKeySpline}"
																                      KeyTime="{StaticResource ControlNormalAnimationDuration}"
																                      Value="12" />
															</DoubleAnimationUsingKeyFrames>
															<DoubleAnimationUsingKeyFrames EnableDependentAnimation="True"
															                               Storyboard.TargetName="SwitchKnobOff"
															                               Storyboard.TargetProperty="Height">
																<SplineDoubleKeyFrame KeySpline="{StaticResource ControlFastOutSlowInKeySpline}"
																                      KeyTime="{StaticResource ControlNormalAnimationDuration}"
																                      Value="12" />
															</DoubleAnimationUsingKeyFrames>
														</Storyboard>
													</VisualState>
												</VisualStateGroup>
												<VisualStateGroup x:Name="ToggleStates">
													<VisualStateGroup.Transitions>
														<VisualTransition x:Name="DraggingToOnTransition"
														                  GeneratedDuration="0"
														                  From="Dragging"
														                  To="On">
															<Storyboard>
																<RepositionThemeAnimation FromHorizontalOffset="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.KnobCurrentToOnOffset}"
																                          TargetName="SwitchKnob" />
																<DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds"
																                               Storyboard.TargetProperty="Opacity">
																	<LinearDoubleKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}"
																	                      Value="1" />
																</DoubleAnimationUsingKeyFrames>
																<DoubleAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder"
																                               Storyboard.TargetProperty="Opacity">
																	<LinearDoubleKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}"
																	                      Value="0" />
																</DoubleAnimationUsingKeyFrames>
																<DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOn"
																                               Storyboard.TargetProperty="Opacity">
																	<LinearDoubleKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}"
																	                      Value="1" />
																</DoubleAnimationUsingKeyFrames>
																<DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOff"
																                               Storyboard.TargetProperty="Opacity">
																	<LinearDoubleKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}"
																	                      Value="0" />
																</DoubleAnimationUsingKeyFrames>
															</Storyboard>
														</VisualTransition>
														<VisualTransition x:Name="OnToDraggingTransition"
														                  GeneratedDuration="0"
														                  From="On"
														                  To="Dragging">
															<Storyboard>
																<DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds"
																                               Storyboard.TargetProperty="Opacity">
																	<LinearDoubleKeyFrame KeyTime="0"
																	                      Value="1" />
																</DoubleAnimationUsingKeyFrames>
																<DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOn"
																                               Storyboard.TargetProperty="Opacity">
																	<LinearDoubleKeyFrame KeyTime="0"
																	                      Value="1" />
																</DoubleAnimationUsingKeyFrames>
																<DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOff"
																                               Storyboard.TargetProperty="Opacity">
																	<LinearDoubleKeyFrame KeyTime="0"
																	                      Value="0" />
																</DoubleAnimationUsingKeyFrames>
															</Storyboard>
														</VisualTransition>
														<VisualTransition x:Name="DraggingToOffTransition"
														                  GeneratedDuration="0"
														                  From="Dragging"
														                  To="Off">
															<Storyboard>
																<RepositionThemeAnimation FromHorizontalOffset="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.KnobCurrentToOffOffset}"
																                          TargetName="SwitchKnob" />
																<DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds"
																                               Storyboard.TargetProperty="Opacity">
																	<LinearDoubleKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}"
																	                      Value="0" />
																</DoubleAnimationUsingKeyFrames>
																<DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOn"
																                               Storyboard.TargetProperty="Opacity">
																	<LinearDoubleKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}"
																	                      Value="0" />
																</DoubleAnimationUsingKeyFrames>
																<DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOff"
																                               Storyboard.TargetProperty="Opacity">
																	<LinearDoubleKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}"
																	                      Value="1" />
																</DoubleAnimationUsingKeyFrames>
															</Storyboard>
														</VisualTransition>
														<VisualTransition x:Name="OnToOffTransition"
														                  GeneratedDuration="0"
														                  From="On"
														                  To="Off">
															<Storyboard>
																<RepositionThemeAnimation FromHorizontalOffset="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.KnobOnToOffOffset}"
																                          TargetName="SwitchKnob" />
															</Storyboard>
														</VisualTransition>
														<VisualTransition x:Name="OffToOnTransition"
														                  GeneratedDuration="0"
														                  From="Off"
														                  To="On">
															<Storyboard>
																<RepositionThemeAnimation FromHorizontalOffset="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.KnobOffToOnOffset}"
																                          TargetName="SwitchKnob" />
																<DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds"
																                               Storyboard.TargetProperty="Opacity">
																	<LinearDoubleKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}"
																	                      Value="1" />
																</DoubleAnimationUsingKeyFrames>
																<DoubleAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder"
																                               Storyboard.TargetProperty="Opacity">
																	<LinearDoubleKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}"
																	                      Value="0" />
																</DoubleAnimationUsingKeyFrames>
																<DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOn"
																                               Storyboard.TargetProperty="Opacity">
																	<LinearDoubleKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}"
																	                      Value="1" />
																</DoubleAnimationUsingKeyFrames>
																<DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOff"
																                               Storyboard.TargetProperty="Opacity">
																	<LinearDoubleKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}"
																	                      Value="0" />
																</DoubleAnimationUsingKeyFrames>
															</Storyboard>
														</VisualTransition>
													</VisualStateGroup.Transitions>
													<VisualState x:Name="Dragging" />
													<VisualState x:Name="Off" />
													<VisualState x:Name="On">
														<Storyboard>
															<DoubleAnimation Storyboard.TargetName="KnobTranslateTransform"
															                 Storyboard.TargetProperty="X"
															                 To="20"
															                 Duration="0" />
															<DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds"
															                               Storyboard.TargetProperty="Opacity">
																<LinearDoubleKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}"
																                      Value="1" />
															</DoubleAnimationUsingKeyFrames>
															<DoubleAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder"
															                               Storyboard.TargetProperty="Opacity">
																<LinearDoubleKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}"
																                      Value="0" />
															</DoubleAnimationUsingKeyFrames>
															<DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOn"
															                               Storyboard.TargetProperty="Opacity">
																<LinearDoubleKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}"
																                      Value="1" />
															</DoubleAnimationUsingKeyFrames>
															<DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOff"
															                               Storyboard.TargetProperty="Opacity">
																<LinearDoubleKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}"
																                      Value="0" />
															</DoubleAnimationUsingKeyFrames>
														</Storyboard>
													</VisualState>
												</VisualStateGroup>
												<VisualStateGroup x:Name="ContentStates">
													<VisualState x:Name="OffContent">
														<Storyboard>
															<DoubleAnimation Storyboard.TargetName="OffContentPresenter"
															                 Storyboard.TargetProperty="Opacity"
															                 To="1"
															                 Duration="0" />
															<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OffContentPresenter"
															                               Storyboard.TargetProperty="IsHitTestVisible">
																<DiscreteObjectKeyFrame KeyTime="0">
																	<DiscreteObjectKeyFrame.Value>
																		<x:Boolean>True</x:Boolean>
																	</DiscreteObjectKeyFrame.Value>
																</DiscreteObjectKeyFrame>
															</ObjectAnimationUsingKeyFrames>
														</Storyboard>
													</VisualState>
													<VisualState x:Name="OnContent">
														<Storyboard>
															<DoubleAnimation Storyboard.TargetName="OnContentPresenter"
															                 Storyboard.TargetProperty="Opacity"
															                 To="1"
															                 Duration="0" />
															<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OnContentPresenter"
															                               Storyboard.TargetProperty="IsHitTestVisible">
																<DiscreteObjectKeyFrame KeyTime="0">
																	<DiscreteObjectKeyFrame.Value>
																		<x:Boolean>True</x:Boolean>
																	</DiscreteObjectKeyFrame.Value>
																</DiscreteObjectKeyFrame>
															</ObjectAnimationUsingKeyFrames>
														</Storyboard>
													</VisualState>
												</VisualStateGroup>
											</VisualStateManager.VisualStateGroups>
										</Grid>
									</ControlTemplate>
								</Setter.Value>
							</Setter>
						</Style.Setters>
					</Style>
				</ResourceDictionary>
				<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
				                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
				                    xmlns:animatedvisuals="using:Microsoft.UI.Xaml.Controls.AnimatedVisuals"
				                    xmlns:local="using:Magpie"
				                    xmlns:muxc="using:Microsoft.UI.Xaml.Controls">

					<x:String x:Key="SettingsExpanderChevronToolTip">Show all settings</x:String>
					<Thickness x:Key="SettingsExpanderHeaderPadding">16,16,4,16</Thickness>
					<Thickness x:Key="SettingsExpanderItemPadding">58,8,44,8</Thickness>
					<Thickness x:Key="SettingsExpanderItemBorderThickness">0,1,0,0</Thickness>
					<Thickness x:Key="ClickableSettingsExpanderItemPadding">58,8,16,8</Thickness>
					<x:Double x:Key="SettingsExpanderContentMinHeight">16</x:Double>
					<x:Double x:Key="SettingsExpanderChevronButtonWidth">32</x:Double>
					<x:Double x:Key="SettingsExpanderChevronButtonHeight">32</x:Double>

					<local:SettingsExpanderCornerRadiusConverter x:Key="SettingsExpanderCornerRadiusConverter" />

					<Style x:Key="DefaultSettingsExpanderItemStyle"
					       BasedOn="{StaticResource DefaultSettingsCardStyle}"
					       TargetType="local:SettingsCard">
						<Style.Setters>
							<Setter Property="BorderThickness" Value="{ThemeResource SettingsExpanderItemBorderThickness}" />
							<Setter Property="MinHeight" Value="52" />
							<Setter Property="Padding" Value="{ThemeResource SettingsExpanderItemPadding}" />
							<Setter Property="CornerRadius" Value="0" />
						</Style.Setters>
					</Style>

					<Style x:Key="ClickableSettingsExpanderItemStyle"
					       BasedOn="{StaticResource DefaultSettingsExpanderItemStyle}"
					       TargetType="local:SettingsCard">
						<Style.Setters>
							<Setter Property="Padding" Value="{ThemeResource ClickableSettingsExpanderItemPadding}" />
						</Style.Setters>
					</Style>

					<!--  Implicitly applied default style  -->
					<Style BasedOn="{StaticResource DefaultSettingsExpanderStyle}"
					       TargetType="local:SettingsExpander" />

					<Style x:Key="DefaultSettingsExpanderStyle"
					       TargetType="local:SettingsExpander">
						<Style.Setters>
							<Setter Property="Background" Value="{ThemeResource SettingsCardBackground}" />
							<Setter Property="Foreground" Value="{ThemeResource SettingsCardForeground}" />
							<Setter Property="BorderBrush" Value="{ThemeResource SettingsCardBorderBrush}" />
							<Setter Property="BorderThickness" Value="{ThemeResource SettingsCardBorderThickness}" />
							<Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
							<Setter Property="MinHeight" Value="{ThemeResource SettingsCardMinHeight}" />
							<Setter Property="MinWidth" Value="{ThemeResource SettingsCardMinWidth}" />
							<Setter Property="IsTabStop" Value="False" />
							<Setter Property="HorizontalAlignment" Value="Stretch" />
							<Setter Property="HorizontalContentAlignment" Value="Stretch" />
							<Setter Property="VerticalAlignment" Value="Center" />
							<Setter Property="BackgroundSizing" Value="InnerBorderEdge" />
							<Setter Property="Padding" Value="{ThemeResource SettingsExpanderHeaderPadding}" />
							<Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
							<Setter Property="FontWeight" Value="Normal" />
							<Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
							<Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
							<Setter Property="FocusVisualMargin" Value="-3" />
							<Setter Property="Template">
								<Setter.Value>
									<ControlTemplate TargetType="local:SettingsExpander">
										<muxc:Expander MinWidth="{TemplateBinding MinWidth}"
										               MinHeight="{TemplateBinding MinHeight}"
										               HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
										               HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
										               CornerRadius="{TemplateBinding CornerRadius}"
										               IsExpanded="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
										               Style="{StaticResource SettingsExpanderExpanderStyle}">
											<muxc:Expander.Header>
												<local:SettingsCard Padding="{StaticResource SettingsExpanderHeaderPadding}"
												                    VerticalAlignment="Center"
												                    Background="Transparent"
												                    BorderThickness="0"
												                    Content="{TemplateBinding Content}"
												                    Description="{TemplateBinding Description}"
												                    FontFamily="{TemplateBinding FontFamily}"
												                    Header="{TemplateBinding Header}"
												                    HeaderIcon="{TemplateBinding HeaderIcon}"
												                    IsClickEnabled="False" />
											</muxc:Expander.Header>
											<muxc:Expander.Content>
												<StackPanel ChildrenTransitions="{StaticResource SettingsCardsAnimations}"
												            CornerRadius="{Binding CornerRadius, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource SettingsExpanderCornerRadiusConverter}}">
													<ContentPresenter Content="{TemplateBinding ItemsHeader}" />
													<!--  ItemsRepeater 无法在 XAML Islands 中使用，见 https://github.com/microsoft/microsoft-ui-xaml/issues/2349  -->
													<ItemsControl x:Name="PART_ItemsContainer"
													              Grid.Row="1"
													              IsTabStop="False"
													              ItemTemplate="{Binding ItemTemplate, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
													<ContentPresenter Grid.Row="2"
													                  Content="{TemplateBinding ItemsFooter}" />
												</StackPanel>
											</muxc:Expander.Content>
										</muxc:Expander>
									</ControlTemplate>
								</Setter.Value>
							</Setter>
						</Style.Setters>
					</Style>

					<Style x:Key="SettingsExpanderExpanderStyle"
					       TargetType="muxc:Expander">
						<Setter Property="Background" Value="{ThemeResource ExpanderContentBackground}" />
						<Setter Property="BackgroundSizing" Value="InnerBorderEdge" />
						<Setter Property="MinWidth" Value="{ThemeResource FlyoutThemeMinWidth}" />
						<Setter Property="MinHeight" Value="{StaticResource ExpanderMinHeight}" />
						<Setter Property="BorderThickness" Value="{ThemeResource ExpanderContentDownBorderThickness}" />
						<Setter Property="BorderBrush" Value="{ThemeResource ExpanderContentBorderBrush}" />
						<Setter Property="Padding" Value="0" />
						<Setter Property="HorizontalAlignment" Value="Left" />
						<Setter Property="VerticalAlignment" Value="Center" />
						<Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
						<Setter Property="Template">
							<Setter.Value>
								<ControlTemplate TargetType="muxc:Expander">
									<Grid MinWidth="{TemplateBinding MinWidth}"
									      MaxWidth="{TemplateBinding MaxWidth}">
										<Grid.RowDefinitions>
											<RowDefinition x:Name="Row0"
											               Height="Auto" />
											<RowDefinition x:Name="Row1"
											               Height="*" />
										</Grid.RowDefinitions>
										<ToggleButton x:Name="PART_ExpanderHeader"
										              MinHeight="{TemplateBinding MinHeight}"
										              Padding="{StaticResource ExpanderHeaderPadding}"
										              HorizontalAlignment="Stretch"
										              HorizontalContentAlignment="{StaticResource ExpanderHeaderHorizontalContentAlignment}"
										              VerticalContentAlignment="{StaticResource ExpanderHeaderVerticalContentAlignment}"
										              BackgroundSizing="{TemplateBinding BackgroundSizing}"
										              BorderBrush="{ThemeResource ExpanderHeaderBorderBrush}"
										              BorderThickness="{ThemeResource ExpanderHeaderBorderThickness}"
										              Content="{TemplateBinding Header}"
										              ContentTemplate="{TemplateBinding HeaderTemplate}"
										              ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
										              CornerRadius="{TemplateBinding CornerRadius}"
										              IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
										              IsEnabled="{TemplateBinding IsEnabled}"
										              IsTabStop="True"
										              Style="{StaticResource SettingsExpanderHeaderDownStyle}" />
										<!--  The clip is a composition clip applied in code  -->
										<Border x:Name="ExpanderContentClip"
										        Grid.Row="1">
											<Border x:Name="ExpanderContent"
											        MinHeight="{ThemeResource SettingsExpanderContentMinHeight}"
											        Padding="{TemplateBinding Padding}"
											        HorizontalAlignment="Stretch"
											        VerticalAlignment="Stretch"
											        BackgroundSizing="{TemplateBinding BackgroundSizing}"
											        BorderBrush="{TemplateBinding BorderBrush}"
											        BorderThickness="{StaticResource ExpanderContentDownBorderThickness}"
											        CornerRadius="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomCornerRadiusFilterConverter}}"
											        Visibility="Collapsed">
												<ContentPresenter Margin="0,-2,0,0"
												                  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
												                  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
												                  Content="{TemplateBinding Content}"
												                  ContentTemplate="{TemplateBinding ContentTemplate}"
												                  ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" />
												<Border.RenderTransform>
													<CompositeTransform />
												</Border.RenderTransform>
											</Border>
										</Border>
										<VisualStateManager.VisualStateGroups>
											<VisualStateGroup x:Name="ExpandStates">
												<VisualState x:Name="ExpandDown">
													<VisualState.Setters>
														<Setter Target="PART_ExpanderHeader.CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopCornerRadiusFilterConverter}}" />
													</VisualState.Setters>
													<VisualState.Storyboard>
														<Storyboard>
															<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpanderContent"
															                               Storyboard.TargetProperty="Visibility">
																<DiscreteObjectKeyFrame KeyTime="0"
																                        Value="Visible" />
															</ObjectAnimationUsingKeyFrames>
															<DoubleAnimationUsingKeyFrames Storyboard.TargetName="ExpanderContent"
															                               Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)">
																<DiscreteDoubleKeyFrame KeyTime="0"
																                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.NegativeContentHeight}" />
																<SplineDoubleKeyFrame KeySpline="0.0, 0.0, 0.0, 1.0"
																                      KeyTime="0:0:0.333"
																                      Value="0" />
															</DoubleAnimationUsingKeyFrames>
														</Storyboard>
													</VisualState.Storyboard>
												</VisualState>
												<VisualState x:Name="CollapseUp">
													<VisualState.Storyboard>
														<Storyboard>
															<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpanderContent"
															                               Storyboard.TargetProperty="Visibility">
																<DiscreteObjectKeyFrame KeyTime="0:0:0.048"
																                        Value="Collapsed" />
															</ObjectAnimationUsingKeyFrames>
															<DoubleAnimation Storyboard.TargetName="ExpanderContent"
															                 Storyboard.TargetProperty="Opacity"
															                 From="1"
															                 To="0"
															                 Duration="0:0:0.048" />
															<DoubleAnimationUsingKeyFrames Storyboard.TargetName="ExpanderContent"
															                               Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)">
																<DiscreteDoubleKeyFrame KeyTime="0"
																                        Value="0" />
																<SplineDoubleKeyFrame KeySpline="1.0, 1.0, 0.0, 1.0"
																                      KeyTime="0:0:0.167"
																                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.NegativeContentHeight}" />
															</DoubleAnimationUsingKeyFrames>
														</Storyboard>
													</VisualState.Storyboard>
												</VisualState>
											</VisualStateGroup>
										</VisualStateManager.VisualStateGroups>
									</Grid>
								</ControlTemplate>
							</Setter.Value>
						</Setter>
					</Style>

					<Style x:Key="SettingsExpanderHeaderDownStyle"
					       TargetType="ToggleButton">
						<Setter Property="Padding" Value="0" />
						<Setter Property="HorizontalContentAlignment" Value="Left" />
						<Setter Property="BackgroundSizing" Value="InnerBorderEdge" />
						<Setter Property="Template">
							<Setter.Value>
								<ControlTemplate TargetType="ToggleButton">
									<Grid x:Name="ToggleButtonGrid"
									      Width="{TemplateBinding Width}"
									      MinWidth="{TemplateBinding MinWidth}"
									      MinHeight="{TemplateBinding MinHeight}"
									      MaxWidth="{TemplateBinding MaxWidth}"
									      HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
									      Background="{TemplateBinding Background}"
									      BackgroundSizing="{TemplateBinding BackgroundSizing}"
									      BorderBrush="{ThemeResource ExpanderHeaderBorderBrush}"
									      BorderThickness="{TemplateBinding BorderThickness}"
									      CornerRadius="{TemplateBinding CornerRadius}">
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="*" />
											<ColumnDefinition Width="Auto" />
										</Grid.ColumnDefinitions>

										<ContentPresenter x:Name="ContentPresenter"
										                  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
										                  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
										                  Content="{TemplateBinding Content}"
										                  ContentTemplate="{TemplateBinding ContentTemplate}"
										                  ContentTransitions="{TemplateBinding ContentTransitions}"
										                  Foreground="{TemplateBinding Foreground}" />

										<ContentControl x:Name="ExpandCollapseChevronBorder"
										                Grid.Column="1"
										                Width="{StaticResource SettingsExpanderChevronButtonWidth}"
										                Height="{StaticResource SettingsExpanderChevronButtonHeight}"
										                Margin="0,0,8,0"
										                HorizontalAlignment="Center"
										                VerticalAlignment="Center"
										                HorizontalContentAlignment="Center"
										                VerticalContentAlignment="Center"
										                Background="{ThemeResource ExpanderChevronBackground}"
										                BorderBrush="{ThemeResource ExpanderChevronBorderBrush}"
										                BorderThickness="{ThemeResource ExpanderChevronBorderThickness}"
										                CornerRadius="{ThemeResource ControlCornerRadius}"
										                FocusVisualMargin="-3"
										                IsTabStop="False"
										                ToolTipService.ToolTip="{StaticResource SettingsExpanderChevronToolTip}"
										                UseSystemFocusVisuals="True">
											<muxc:AnimatedIcon x:Name="PART_ExpandCollapseChevron"
											                   Width="16"
											                   Height="16"
											                   HorizontalAlignment="Center"
											                   VerticalAlignment="Center"
											                   muxc:AnimatedIcon.State="PointerOverOff"
											                   Foreground="{ThemeResource ExpanderChevronForeground}"
											                   RenderTransformOrigin="0.5, 0.5">
												<animatedvisuals:AnimatedChevronUpDownSmallVisualSource />
												<muxc:AnimatedIcon.FallbackIconSource>
													<muxc:FontIconSource FontFamily="{StaticResource SymbolThemeFontFamily}"
													                     FontSize="16"
													                     Glyph="{StaticResource ExpanderChevronDownGlyph}"
													                     IsTextScaleFactorEnabled="False" />
												</muxc:AnimatedIcon.FallbackIconSource>
											</muxc:AnimatedIcon>
										</ContentControl>

										<VisualStateManager.VisualStateGroups>
											<VisualStateGroup x:Name="CommonStates">
												<VisualState x:Name="Normal">
													<Storyboard>
														<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
														                               Storyboard.TargetProperty="Foreground">
															<DiscreteObjectKeyFrame KeyTime="0"
															                        Value="{ThemeResource ExpanderHeaderForeground}" />
														</ObjectAnimationUsingKeyFrames>
														<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ToggleButtonGrid"
														                               Storyboard.TargetProperty="BorderBrush">
															<DiscreteObjectKeyFrame KeyTime="0"
															                        Value="{ThemeResource SettingsCardBorderBrush}" />
														</ObjectAnimationUsingKeyFrames>
														<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ExpandCollapseChevron"
														                               Storyboard.TargetProperty="Foreground">
															<DiscreteObjectKeyFrame KeyTime="0"
															                        Value="{ThemeResource ExpanderChevronForeground}" />
														</ObjectAnimationUsingKeyFrames>
														<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ToggleButtonGrid"
														                               Storyboard.TargetProperty="Background">
															<DiscreteObjectKeyFrame KeyTime="0"
															                        Value="{ThemeResource SettingsCardBackground}" />
														</ObjectAnimationUsingKeyFrames>
													</Storyboard>
												</VisualState>
												<VisualState x:Name="PointerOver">
													<Storyboard>
														<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
														                               Storyboard.TargetProperty="Foreground">
															<DiscreteObjectKeyFrame KeyTime="0"
															                        Value="{ThemeResource ExpanderHeaderForegroundPointerOver}" />
														</ObjectAnimationUsingKeyFrames>
														<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ToggleButtonGrid"
														                               Storyboard.TargetProperty="BorderBrush">
															<DiscreteObjectKeyFrame KeyTime="0"
															                        Value="{ThemeResource SettingsCardBorderBrushPointerOver}" />
														</ObjectAnimationUsingKeyFrames>
														<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ExpandCollapseChevron"
														                               Storyboard.TargetProperty="Foreground">
															<DiscreteObjectKeyFrame KeyTime="0"
															                        Value="{ThemeResource ExpanderChevronPointerOverForeground}" />
														</ObjectAnimationUsingKeyFrames>
														<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ToggleButtonGrid"
														                               Storyboard.TargetProperty="Background">
															<DiscreteObjectKeyFrame KeyTime="0"
															                        Value="{ThemeResource SettingsCardBackgroundPointerOver}" />
														</ObjectAnimationUsingKeyFrames>
													</Storyboard>
													<VisualState.Setters>
														<Setter Target="PART_ExpandCollapseChevron.(muxc:AnimatedIcon.State)" Value="PointerOverOff" />
													</VisualState.Setters>
												</VisualState>
												<VisualState x:Name="Pressed">
													<Storyboard>
														<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
														                               Storyboard.TargetProperty="Foreground">
															<DiscreteObjectKeyFrame KeyTime="0"
															                        Value="{ThemeResource ExpanderHeaderForegroundPressed}" />
														</ObjectAnimationUsingKeyFrames>
														<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ToggleButtonGrid"
														                               Storyboard.TargetProperty="BorderBrush">
															<DiscreteObjectKeyFrame KeyTime="0"
															                        Value="{ThemeResource SettingsCardBorderBrushPressed}" />
														</ObjectAnimationUsingKeyFrames>
														<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ExpandCollapseChevron"
														                               Storyboard.TargetProperty="Foreground">
															<DiscreteObjectKeyFrame KeyTime="0"
															                        Value="{ThemeResource ExpanderChevronPressedForeground}" />
														</ObjectAnimationUsingKeyFrames>
														<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ToggleButtonGrid"
														                               Storyboard.TargetProperty="Background">
															<DiscreteObjectKeyFrame KeyTime="0"
															                        Value="{ThemeResource SettingsCardBackgroundPressed}" />
														</ObjectAnimationUsingKeyFrames>
													</Storyboard>
													<VisualState.Setters>
														<Setter Target="PART_ExpandCollapseChevron.(muxc:AnimatedIcon.State)" Value="PointerOverOff" />
													</VisualState.Setters>
												</VisualState>
												<VisualState x:Name="Disabled">
													<Storyboard>
														<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
														                               Storyboard.TargetProperty="Foreground">
															<DiscreteObjectKeyFrame KeyTime="0"
															                        Value="{ThemeResource ExpanderHeaderDisabledForeground}" />
														</ObjectAnimationUsingKeyFrames>
														<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ToggleButtonGrid"
														                               Storyboard.TargetProperty="BorderBrush">
															<DiscreteObjectKeyFrame KeyTime="0"
															                        Value="{ThemeResource SettingsCardBorderBrushDisabled}" />
														</ObjectAnimationUsingKeyFrames>
														<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ExpandCollapseChevron"
														                               Storyboard.TargetProperty="Foreground">
															<DiscreteObjectKeyFrame KeyTime="0"
															                        Value="{ThemeResource ExpanderHeaderDisabledForeground}" />
														</ObjectAnimationUsingKeyFrames>
													</Storyboard>
												</VisualState>
												<VisualState x:Name="Checked">
													<Storyboard>
														<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
														                               Storyboard.TargetProperty="Foreground">
															<DiscreteObjectKeyFrame KeyTime="0"
															                        Value="{ThemeResource ExpanderHeaderForeground}" />
														</ObjectAnimationUsingKeyFrames>
														<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ExpandCollapseChevron"
														                               Storyboard.TargetProperty="Foreground">
															<DiscreteObjectKeyFrame KeyTime="0"
															                        Value="{ThemeResource ExpanderChevronForeground}" />
														</ObjectAnimationUsingKeyFrames>
														<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpandCollapseChevronBorder"
														                               Storyboard.TargetProperty="BorderBrush">
															<DiscreteObjectKeyFrame KeyTime="0"
															                        Value="{ThemeResource ExpanderChevronBorderBrush}" />
														</ObjectAnimationUsingKeyFrames>
														<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpandCollapseChevronBorder"
														                               Storyboard.TargetProperty="Background">
															<DiscreteObjectKeyFrame KeyTime="0"
															                        Value="{ThemeResource ExpanderChevronBackground}" />
														</ObjectAnimationUsingKeyFrames>
													</Storyboard>
													<VisualState.Setters>
														<Setter Target="PART_ExpandCollapseChevron.(muxc:AnimatedIcon.State)" Value="PointerOverOn" />
													</VisualState.Setters>
												</VisualState>
												<VisualState x:Name="CheckedPointerOver">
													<Storyboard>
														<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
														                               Storyboard.TargetProperty="Foreground">
															<DiscreteObjectKeyFrame KeyTime="0"
															                        Value="{ThemeResource ExpanderHeaderForegroundPointerOver}" />
														</ObjectAnimationUsingKeyFrames>
														<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ExpandCollapseChevron"
														                               Storyboard.TargetProperty="Foreground">
															<DiscreteObjectKeyFrame KeyTime="0"
															                        Value="{ThemeResource ExpanderChevronPointerOverForeground}" />
														</ObjectAnimationUsingKeyFrames>
														<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ToggleButtonGrid"
														                               Storyboard.TargetProperty="BorderBrush">
															<DiscreteObjectKeyFrame KeyTime="0"
															                        Value="{ThemeResource SettingsCardBorderBrushPointerOver}" />
														</ObjectAnimationUsingKeyFrames>
														<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ToggleButtonGrid"
														                               Storyboard.TargetProperty="Background">
															<DiscreteObjectKeyFrame KeyTime="0"
															                        Value="{ThemeResource SettingsCardBackgroundPointerOver}" />
														</ObjectAnimationUsingKeyFrames>
													</Storyboard>
													<VisualState.Setters>
														<Setter Target="PART_ExpandCollapseChevron.(muxc:AnimatedIcon.State)" Value="PointerOverOn" />
													</VisualState.Setters>
												</VisualState>
												<VisualState x:Name="CheckedPressed">
													<Storyboard>
														<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
														                               Storyboard.TargetProperty="Foreground">
															<DiscreteObjectKeyFrame KeyTime="0"
															                        Value="{ThemeResource ExpanderHeaderForegroundPressed}" />
														</ObjectAnimationUsingKeyFrames>
														<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ExpandCollapseChevron"
														                               Storyboard.TargetProperty="Foreground">
															<DiscreteObjectKeyFrame KeyTime="0"
															                        Value="{ThemeResource ExpanderChevronPressedForeground}" />
														</ObjectAnimationUsingKeyFrames>
														<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ToggleButtonGrid"
														                               Storyboard.TargetProperty="BorderBrush">
															<DiscreteObjectKeyFrame KeyTime="0"
															                        Value="{ThemeResource SettingsCardBorderBrushPressed}" />
														</ObjectAnimationUsingKeyFrames>
														<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ToggleButtonGrid"
														                               Storyboard.TargetProperty="Background">
															<DiscreteObjectKeyFrame KeyTime="0"
															                        Value="{ThemeResource SettingsCardBackgroundPressed}" />
														</ObjectAnimationUsingKeyFrames>
													</Storyboard>
													<VisualState.Setters>
														<Setter Target="PART_ExpandCollapseChevron.(muxc:AnimatedIcon.State)" Value="PointerOverOn" />
													</VisualState.Setters>
												</VisualState>

												<VisualState x:Name="CheckedDisabled">
													<Storyboard>
														<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
														                               Storyboard.TargetProperty="Foreground">
															<DiscreteObjectKeyFrame KeyTime="0"
															                        Value="{ThemeResource ExpanderHeaderDisabledForeground}" />
														</ObjectAnimationUsingKeyFrames>
														<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ExpandCollapseChevron"
														                               Storyboard.TargetProperty="Foreground">
															<DiscreteObjectKeyFrame KeyTime="0"
															                        Value="{ThemeResource ExpanderHeaderDisabledForeground}" />
														</ObjectAnimationUsingKeyFrames>
														<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ToggleButtonGrid"
														                               Storyboard.TargetProperty="BorderBrush">
															<DiscreteObjectKeyFrame KeyTime="0"
															                        Value="{ThemeResource SettingsCardBorderBrushDisabled}" />
														</ObjectAnimationUsingKeyFrames>
													</Storyboard>
													<VisualState.Setters>
														<Setter Target="PART_ExpandCollapseChevron.(muxc:AnimatedIcon.State)" Value="PointerOverOn" />
													</VisualState.Setters>
												</VisualState>
												<VisualState x:Name="Indeterminate" />
												<VisualState x:Name="IndeterminatePointerOver" />
												<VisualState x:Name="IndeterminatePressed" />
												<VisualState x:Name="IndeterminateDisabled" />
											</VisualStateGroup>
										</VisualStateManager.VisualStateGroups>
									</Grid>

								</ControlTemplate>
							</Setter.Value>
						</Setter>
					</Style>

				</ResourceDictionary>
				<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
				                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
				                    xmlns:local="using:Magpie">
					<Style TargetType="local:SettingsGroup">
						<Setter Property="ItemsPanel">
							<Setter.Value>
								<ItemsPanelTemplate>
									<local:SimpleStackPanel ChildrenTransitions="{StaticResource SettingsCardsAnimations}"
									                        Orientation="Vertical"
									                        Spacing="{StaticResource SettingsCardSpacing}" />
								</ItemsPanelTemplate>
							</Setter.Value>
						</Setter>
						<Setter Property="IsTabStop" Value="False" />
						<Setter Property="HorizontalAlignment" Value="Stretch" />
						<Setter Property="HorizontalContentAlignment" Value="Stretch" />
						<Setter Property="Template">
							<Setter.Value>
								<ControlTemplate TargetType="local:SettingsGroup">
									<Grid HorizontalAlignment="Stretch">
										<Grid.RowDefinitions>
											<RowDefinition Height="Auto" />
											<RowDefinition Height="Auto" />
											<RowDefinition Height="Auto" />
										</Grid.RowDefinitions>
										<TextBlock x:Name="HeaderPresenter"
										           Grid.Row="0"
										           Margin="1,0,0,0"
										           AutomationProperties.HeadingLevel="Level2"
										           Style="{ThemeResource BodyStrongTextBlockStyle}"
										           Text="{TemplateBinding Header}" />

										<ContentPresenter x:Name="DescriptionPresenter"
										                  Grid.Row="1"
										                  Margin="1,0,0,0"
										                  Content="{TemplateBinding Description}"
										                  Foreground="{ThemeResource TextFillColorSecondaryBrush}"
										                  TextWrapping="WrapWholeWords">
											<ContentPresenter.Resources>
												<Style BasedOn="{StaticResource CaptionTextBlockStyle}"
												       TargetType="TextBlock">
													<Style.Setters>
														<Setter Property="TextWrapping" Value="WrapWholeWords" />
													</Style.Setters>
												</Style>
												<Style BasedOn="{StaticResource TextButtonStyle}"
												       TargetType="HyperlinkButton">
													<Style.Setters>
														<Setter Property="Padding" Value="0,0,0,0" />
													</Style.Setters>
												</Style>
											</ContentPresenter.Resources>
										</ContentPresenter>
										<ItemsPresenter Grid.Row="2"
										                Margin="0,8,0,0" />
										<VisualStateManager.VisualStateGroups>
											<VisualStateGroup x:Name="CommonStates">
												<VisualState x:Name="Normal" />
												<VisualState x:Name="Disabled">
													<VisualState.Setters>
														<Setter Target="HeaderPresenter.Foreground" Value="{ThemeResource TextFillColorDisabledBrush}" />
														<Setter Target="DescriptionPresenter.Foreground" Value="{ThemeResource TextFillColorDisabledBrush}" />
													</VisualState.Setters>
												</VisualState>
											</VisualStateGroup>
										</VisualStateManager.VisualStateGroups>
									</Grid>
								</ControlTemplate>
							</Setter.Value>
						</Setter>
					</Style>
				</ResourceDictionary>
			</ResourceDictionary.MergedDictionaries>

			<local:BoolNegationConverter x:Key="NegationConverter" />
			<local:BoolToNegativeVisibilityConverter x:Key="NegativeVisibilityConverter" />

			<x:Double x:Key="SecondaryTextFontSize">12</x:Double>

			<TransitionCollection x:Key="SettingsCardsAnimations">
				<RepositionThemeTransition IsStaggeringEnabled="False" />
			</TransitionCollection>

			<x:Double x:Key="SettingsCardSpacing">2</x:Double>
			<x:Double x:Key="SettingsGroupSpacing">32</x:Double>

			<x:Double x:Key="StandardIconSize">14</x:Double>

			<!--  ComboBox  -->
			<x:Double x:Key="SettingBoxMinWidth">220</x:Double>
			<Style x:Key="ComboBoxSettingStyle"
			       BasedOn="{StaticResource DefaultComboBoxStyle}"
			       TargetType="ComboBox">
				<Setter Property="MinWidth" Value="{StaticResource SettingBoxMinWidth}" />
			</Style>

			<!--  InfoBar  -->
			<Thickness x:Key="InfoBarIconMargin">0,16,22,16</Thickness>
			<Thickness x:Key="InfoBarContentRootPadding">20,0,0,0</Thickness>

			<Color x:Key="DeleteButtonBackgroundColor">Firebrick</Color>
			<SolidColorBrush x:Key="DeleteButtonBackgroundBrush"
			                 Color="{StaticResource DeleteButtonBackgroundColor}" />
			<SolidColorBrush x:Key="DeleteButtonBackgroundPointerOverBrush"
			                 Opacity="0.9"
			                 Color="{StaticResource DeleteButtonBackgroundColor}" />
			<SolidColorBrush x:Key="DeleteButtonBackgroundPressedBrush"
			                 Opacity="0.8"
			                 Color="{StaticResource DeleteButtonBackgroundColor}" />
			<SolidColorBrush x:Key="DeleteButtonForegroundBrush"
			                 Color="#FFFFFF" />
			<SolidColorBrush x:Key="DeleteButtonForegroundPressedBrush"
			                 Color="#B3FFFFFF" />

			<!--  TeachingTip  -->
			<!--  TeachingTip 查找资源的方式很奇怪，似乎只能全局覆盖  -->
			<x:Double x:Key="TeachingTipMinWidth">20</x:Double>
			<x:Double x:Key="TeachingTipMaxWidth">400</x:Double>
		</ResourceDictionary>
	</Application.Resources>
</Application>

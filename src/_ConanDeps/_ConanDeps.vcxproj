<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|ARM64">
      <Configuration>Debug</Configuration>
      <Platform>ARM64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|ARM64">
      <Configuration>Release</Configuration>
      <Platform>ARM64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <VCProjectVersion>17.0</VCProjectVersion>
    <Keyword>Win32Proj</Keyword>
    <ProjectGuid>{456ccae4-2c51-4cf2-8d3a-1efce8c41a2d}</ProjectGuid>
    <WindowsTargetPlatformVersion>10.0</WindowsTargetPlatformVersion>
    <OutDir>$(SolutionDir)bin\$(Platform)\$(Configuration)\</OutDir>
    <IntDir>$(SolutionDir)obj\$(Platform)\$(Configuration)\$(MSBuildProjectName)\</IntDir>
    <!-- 快速检查会忽略新增的 conanfile.txt，不过没关系，可以手动重新生成 -->
    <!-- <DisableFastUpToDateCheck>true</DisableFastUpToDateCheck> -->
  </PropertyGroup>
  <PropertyGroup>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup>
    <ConfigurationType>Utility</ConfigurationType>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ItemGroup>
    <Text Include="conanprofile.txt" />
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <UsingTask TaskName="FindConanFiles" TaskFactory="RoslynCodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll">
    <ParameterGroup>
      <SrcDir Required="true" />
      <IntDir Required="true" />
      <ConanFile ParameterType="Microsoft.Build.Framework.ITaskItem[]" Output="true" />
    </ParameterGroup>
    <Task>
      <Using Namespace="System" />
      <Using Namespace="System.IO" />
      <Using Namespace="System.Collections.Generic" />
      <Using Namespace="Microsoft.Build.Framework" />
      <Code Type="Fragment" Language="cs"><![CDATA[
List<ITaskItem> conanFiles = new List<ITaskItem>();

// 搜索 conanfile.txt
foreach (string projectDir in Directory.GetDirectories(SrcDir)) {
    string conanfilePath = Path.Combine(projectDir, "conanfile.txt");
    if (!File.Exists(conanfilePath)) {
        continue;
    }
    
    string projectName = projectDir.Substring(projectDir.LastIndexOf('\\') + 1);
    // 虽然会生成很多 props，但既然我们只导入 conandeps.props，把它作为输出就够了
    string outputConandepsProps = Path.GetFullPath($"{IntDir}{projectName}\\conandeps.props");
    conanFiles.Add(new TaskItem(Path.GetFullPath(conanfilePath), new Dictionary<string, string> {
        { "ProjectName", projectName },
        { "OutputConandepsProps", outputConandepsProps }
    }));
}

ConanFile = conanFiles.ToArray();
      ]]></Code>
    </Task>
  </UsingTask>
  <Target Name="BuildConanDeps" BeforeTargets="Build">
    <!-- 生成的 props 文件放在 $(IntDir) 里，便于清理 -->
    <FindConanFiles SrcDir="$(ProjectDir).." IntDir="$(IntDir)">
      <Output TaskParameter="ConanFile" ItemName="ConanFile" />
    </FindConanFiles>

    <!-- 检测每个 conanfile 是否已被更改 -->
    <GetOutOfDateItems Sources="@(ConanFile)"
                       OutputsMetadataName="OutputConandepsProps"
                       TLogDirectory="$(TLogLocation)"
                       TLogNamePrefix="$(MSBuildProjectName)"
                       TrackFileAccess="$(TrackFileAccess)">
      <Output TaskParameter="OutOfDateSources" ItemName="_OutOfDateConanFile"/>
    </GetOutOfDateItems>

    <PropertyGroup>
      <ConanInstallArch Condition="'$(Platform)' == 'x64'">x86_64</ConanInstallArch>
      <ConanInstallArch Condition="'$(Platform)' == 'ARM64'">armv8</ConanInstallArch>
    </PropertyGroup>

    <!-- 批量处理 _OutOfDateConanFile 中的元素。从 ConanCenter 下载的包没有 pdb，会引发链接警告。 -->
    <!-- 我们希望自己编译依赖且使用缓存，但很遗憾 conan 不支持。 -->
    <Exec Condition="'@(_OutOfDateConanFile)' != ''" Command="conan install &quot;%(_OutOfDateConanFile.FullPath)&quot; -pr:a=conanprofile.txt --output-folder $(IntDir)%(_OutOfDateConanFile.ProjectName) --build=missing -s build_type=$(Configuration) -s arch=$(ConanInstallArch) --update" />
  </Target>
</Project>
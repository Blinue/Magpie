<!--  移植自 https://github.com/CommunityToolkit/Windows/blob/main/components/SettingsControls/src/SettingsExpander/SettingsExpander.xaml  -->
<!--  Licensed to the .NET Foundation under one or more agreements. The .NET Foundation licenses this file to you under the MIT license. See the LICENSE file in the project root for more information.  -->
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:animatedvisuals="using:Microsoft.UI.Xaml.Controls.AnimatedVisuals"
                    xmlns:local="using:Magpie.App"
                    xmlns:muxc="using:Microsoft.UI.Xaml.Controls">

	<x:String x:Key="SettingsExpanderChevronToolTip">Show all settings</x:String>
	<Thickness x:Key="SettingsExpanderHeaderPadding">16,16,4,16</Thickness>
	<Thickness x:Key="SettingsExpanderItemPadding">58,8,44,8</Thickness>
	<Thickness x:Key="SettingsExpanderItemBorderThickness">0,1,0,0</Thickness>
	<Thickness x:Key="ClickableSettingsExpanderItemPadding">58,8,16,8</Thickness>
	<x:Double x:Key="SettingsExpanderContentMinHeight">16</x:Double>
	<x:Double x:Key="SettingsExpanderChevronButtonWidth">32</x:Double>
	<x:Double x:Key="SettingsExpanderChevronButtonHeight">32</x:Double>

	<Style x:Key="DefaultSettingsExpanderItemStyle"
	       BasedOn="{StaticResource DefaultSettingsCardStyle}"
	       TargetType="local:SettingsCard">
		<Style.Setters>
			<Setter Property="BorderThickness" Value="{ThemeResource SettingsExpanderItemBorderThickness}" />
			<Setter Property="MinHeight" Value="52" />
			<Setter Property="Padding" Value="{ThemeResource SettingsExpanderItemPadding}" />
			<Setter Property="CornerRadius" Value="0" />
		</Style.Setters>
	</Style>

	<Style x:Key="ClickableSettingsExpanderItemStyle"
	       BasedOn="{StaticResource DefaultSettingsExpanderItemStyle}"
	       TargetType="local:SettingsCard">
		<Style.Setters>
			<Setter Property="Padding" Value="{ThemeResource ClickableSettingsExpanderItemPadding}" />
		</Style.Setters>
	</Style>

	<local:SettingsExpanderItemStyleSelector x:Key="SettingsExpanderItemStyleSelector"
	                                         ClickableStyle="{StaticResource ClickableSettingsExpanderItemStyle}"
	                                         DefaultStyle="{StaticResource DefaultSettingsExpanderItemStyle}" />

	<!--  Implicitly applied default style  -->
	<Style BasedOn="{StaticResource DefaultSettingsExpanderStyle}"
	       TargetType="local:SettingsExpander" />

	<Style x:Key="DefaultSettingsExpanderStyle"
	       TargetType="local:SettingsExpander">
		<Style.Setters>
			<Setter Property="Background" Value="{ThemeResource SettingsCardBackground}" />
			<Setter Property="Foreground" Value="{ThemeResource SettingsCardForeground}" />
			<Setter Property="BorderBrush" Value="{ThemeResource SettingsCardBorderBrush}" />
			<Setter Property="BorderThickness" Value="{ThemeResource SettingsCardBorderThickness}" />
			<Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
			<Setter Property="MinHeight" Value="{ThemeResource SettingsCardMinHeight}" />
			<Setter Property="MinWidth" Value="{ThemeResource SettingsCardMinWidth}" />
			<Setter Property="IsTabStop" Value="False" />
			<Setter Property="HorizontalAlignment" Value="Stretch" />
			<Setter Property="HorizontalContentAlignment" Value="Stretch" />
			<Setter Property="VerticalAlignment" Value="Center" />
			<Setter Property="BackgroundSizing" Value="InnerBorderEdge" />
			<Setter Property="Padding" Value="{ThemeResource SettingsExpanderHeaderPadding}" />
			<Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
			<Setter Property="FontWeight" Value="Normal" />
			<Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
			<Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
			<Setter Property="ItemContainerStyleSelector" Value="{StaticResource SettingsExpanderItemStyleSelector}" />
			<Setter Property="FocusVisualMargin" Value="-3" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="local:SettingsExpander">
						<muxc:Expander MinWidth="{TemplateBinding MinWidth}"
						               MinHeight="{TemplateBinding MinHeight}"
						               HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
						               HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
						               CornerRadius="{TemplateBinding CornerRadius}"
						               IsExpanded="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
						               Style="{StaticResource SettingsExpanderExpanderStyle}">
							<muxc:Expander.Header>
								<local:SettingsCard Padding="{StaticResource SettingsExpanderHeaderPadding}"
								                    VerticalAlignment="Center"
								                    Background="Transparent"
								                    BorderThickness="0"
								                    Content="{TemplateBinding Content}"
								                    Description="{TemplateBinding Description}"
								                    Header="{TemplateBinding Header}"
								                    HeaderIcon="{TemplateBinding HeaderIcon}"
								                    IsClickEnabled="False" />
							</muxc:Expander.Header>
							<muxc:Expander.Content>
								<Grid>
									<Grid.RowDefinitions>
										<RowDefinition Height="Auto" />
										<RowDefinition Height="*" />
										<RowDefinition Height="Auto" />
									</Grid.RowDefinitions>
									<ContentPresenter Content="{TemplateBinding ItemsHeader}" />
									<!--  ItemsRepeater 无法在 XAML Islands 中使用，见 https://github.com/microsoft/microsoft-ui-xaml/issues/2349  -->
									<ListView x:Name="PART_ItemsListView"
									          Grid.Row="1"
									          AllowDrop="True"
									          CanReorderItems="{TemplateBinding CanReorderItems}"
									          ItemTemplate="{Binding ItemTemplate, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
									          SelectionMode="None"
									          TabNavigation="Local">
										<ListView.Resources>
											<Style TargetType="ListViewItem">
												<Setter Property="Margin" Value="0" />
												<Setter Property="Padding" Value="0" />
												<Setter Property="MinHeight" Value="0" />
												<Setter Property="HorizontalContentAlignment" Value="Stretch" />
												<Setter Property="IsTabStop" Value="False" />
											</Style>
										</ListView.Resources>
									</ListView>
									<ContentPresenter Grid.Row="2"
									                  Content="{TemplateBinding ItemsFooter}" />
								</Grid>
							</muxc:Expander.Content>
						</muxc:Expander>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style.Setters>
	</Style>

	<Style x:Key="SettingsExpanderExpanderStyle"
	       TargetType="muxc:Expander">
		<Setter Property="Background" Value="{ThemeResource ExpanderContentBackground}" />
		<Setter Property="BackgroundSizing" Value="InnerBorderEdge" />
		<Setter Property="MinWidth" Value="{ThemeResource FlyoutThemeMinWidth}" />
		<Setter Property="MinHeight" Value="{StaticResource ExpanderMinHeight}" />
		<Setter Property="BorderThickness" Value="{ThemeResource ExpanderContentDownBorderThickness}" />
		<Setter Property="BorderBrush" Value="{ThemeResource ExpanderContentBorderBrush}" />
		<Setter Property="Padding" Value="0" />
		<Setter Property="HorizontalAlignment" Value="Left" />
		<Setter Property="VerticalAlignment" Value="Center" />
		<Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="muxc:Expander">
					<Grid MinWidth="{TemplateBinding MinWidth}"
					      MaxWidth="{TemplateBinding MaxWidth}">
						<Grid.RowDefinitions>
							<RowDefinition x:Name="Row0"
							               Height="Auto" />
							<RowDefinition x:Name="Row1"
							               Height="*" />
						</Grid.RowDefinitions>
						<ToggleButton x:Name="ExpanderHeader"
						              MinHeight="{TemplateBinding MinHeight}"
						              Padding="{StaticResource ExpanderHeaderPadding}"
						              HorizontalAlignment="Stretch"
						              HorizontalContentAlignment="{StaticResource ExpanderHeaderHorizontalContentAlignment}"
						              VerticalContentAlignment="{StaticResource ExpanderHeaderVerticalContentAlignment}"
						              BackgroundSizing="{TemplateBinding BackgroundSizing}"
						              BorderBrush="{ThemeResource ExpanderHeaderBorderBrush}"
						              BorderThickness="{ThemeResource ExpanderHeaderBorderThickness}"
						              Content="{TemplateBinding Header}"
						              ContentTemplate="{TemplateBinding HeaderTemplate}"
						              ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
						              CornerRadius="{TemplateBinding CornerRadius}"
						              IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
						              IsEnabled="{TemplateBinding IsEnabled}"
						              IsTabStop="True"
						              Style="{StaticResource SettingsExpanderHeaderDownStyle}" />
						<!--  The clip is a composition clip applied in code  -->
						<Border x:Name="ExpanderContentClip"
						        Grid.Row="1">
							<Border x:Name="ExpanderContent"
							        MinHeight="{ThemeResource SettingsExpanderContentMinHeight}"
							        Padding="{TemplateBinding Padding}"
							        HorizontalAlignment="Stretch"
							        VerticalAlignment="Stretch"
							        BackgroundSizing="{TemplateBinding BackgroundSizing}"
							        BorderBrush="{TemplateBinding BorderBrush}"
							        BorderThickness="{StaticResource ExpanderContentDownBorderThickness}"
							        CornerRadius="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomCornerRadiusFilterConverter}}"
							        Visibility="Collapsed">
								<ContentPresenter Margin="0,-2,0,0"
								                  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
								                  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
								                  Content="{TemplateBinding Content}"
								                  ContentTemplate="{TemplateBinding ContentTemplate}"
								                  ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" />
								<Border.RenderTransform>
									<CompositeTransform />
								</Border.RenderTransform>
							</Border>
						</Border>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="ExpandStates">
								<VisualState x:Name="ExpandUp">
									<VisualState.Setters>
										<Setter Target="ExpanderHeader.CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomCornerRadiusFilterConverter}}" />
									</VisualState.Setters>
									<VisualState.Storyboard>
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpanderContent"
											                               Storyboard.TargetProperty="Visibility">
												<DiscreteObjectKeyFrame KeyTime="0"
												                        Value="Visible" />
											</ObjectAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetName="ExpanderContent"
											                               Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)">
												<DiscreteDoubleKeyFrame KeyTime="0"
												                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.ContentHeight}" />
												<SplineDoubleKeyFrame KeySpline="0.0, 0.0, 0.0, 1.0"
												                      KeyTime="0:0:0.333"
												                      Value="0" />
											</DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState.Storyboard>
								</VisualState>
								<VisualState x:Name="CollapseDown">
									<VisualState.Storyboard>
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpanderContent"
											                               Storyboard.TargetProperty="Visibility">
												<DiscreteObjectKeyFrame KeyTime="0:0:0.2"
												                        Value="Collapsed" />
											</ObjectAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetName="ExpanderContent"
											                               Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)">
												<DiscreteDoubleKeyFrame KeyTime="0"
												                        Value="0" />
												<SplineDoubleKeyFrame KeySpline="1.0, 1.0, 0.0, 1.0"
												                      KeyTime="0:0:0.167"
												                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.ContentHeight}" />
											</DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState.Storyboard>
								</VisualState>
								<VisualState x:Name="ExpandDown">
									<VisualState.Setters>
										<Setter Target="ExpanderHeader.CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopCornerRadiusFilterConverter}}" />
									</VisualState.Setters>
									<VisualState.Storyboard>
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpanderContent"
											                               Storyboard.TargetProperty="Visibility">
												<DiscreteObjectKeyFrame KeyTime="0"
												                        Value="Visible" />
											</ObjectAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetName="ExpanderContent"
											                               Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)">
												<DiscreteDoubleKeyFrame KeyTime="0"
												                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.NegativeContentHeight}" />
												<SplineDoubleKeyFrame KeySpline="0.0, 0.0, 0.0, 1.0"
												                      KeyTime="0:0:0.333"
												                      Value="0" />
											</DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState.Storyboard>
								</VisualState>
								<VisualState x:Name="CollapseUp">
									<VisualState.Storyboard>
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpanderContent"
											                               Storyboard.TargetProperty="Visibility">
												<DiscreteObjectKeyFrame KeyTime="0:0:0.167"
												                        Value="Collapsed" />
											</ObjectAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetName="ExpanderContent"
											                               Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)">
												<DiscreteDoubleKeyFrame KeyTime="0"
												                        Value="0" />
												<SplineDoubleKeyFrame KeySpline="1.0, 1.0, 0.0, 1.0"
												                      KeyTime="0:0:0.167"
												                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.NegativeContentHeight}" />
											</DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState.Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="ExpandDirectionStates">
								<VisualState x:Name="Down" />
								<VisualState x:Name="Up">
									<VisualState.Setters>
										<Setter Target="ExpanderHeader.Style" Value="{StaticResource ExpanderHeaderUpStyle}" />
										<Setter Target="ExpanderContent.BorderThickness" Value="{StaticResource ExpanderContentUpBorderThickness}" />
										<Setter Target="ExpanderContent.CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopCornerRadiusFilterConverter}}" />
										<Setter Target="ExpanderHeader.(Grid.Row)" Value="1" />
										<Setter Target="ExpanderContentClip.(Grid.Row)" Value="0" />
										<Setter Target="Row0.Height" Value="*" />
										<Setter Target="Row1.Height" Value="Auto" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="SettingsExpanderHeaderDownStyle"
	       TargetType="ToggleButton">
		<Setter Property="Padding" Value="0" />
		<Setter Property="HorizontalContentAlignment" Value="Left" />
		<Setter Property="BackgroundSizing" Value="InnerBorderEdge" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ToggleButton">
					<Grid x:Name="ToggleButtonGrid"
					      Width="{TemplateBinding Width}"
					      MinWidth="{TemplateBinding MinWidth}"
					      MinHeight="{TemplateBinding MinHeight}"
					      MaxWidth="{TemplateBinding MaxWidth}"
					      HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
					      Background="{TemplateBinding Background}"
					      BackgroundSizing="{TemplateBinding BackgroundSizing}"
					      BorderBrush="{ThemeResource ExpanderHeaderBorderBrush}"
					      BorderThickness="{TemplateBinding BorderThickness}"
					      CornerRadius="{TemplateBinding CornerRadius}">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>

						<ContentPresenter x:Name="ContentPresenter"
						                  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
						                  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
						                  Content="{TemplateBinding Content}"
						                  ContentTemplate="{TemplateBinding ContentTemplate}"
						                  ContentTransitions="{TemplateBinding ContentTransitions}"
						                  Foreground="{TemplateBinding Foreground}" />

						<ContentControl x:Name="ExpandCollapseChevronBorder"
						                Grid.Column="1"
						                Width="{StaticResource SettingsExpanderChevronButtonWidth}"
						                Height="{StaticResource SettingsExpanderChevronButtonHeight}"
						                Margin="0,0,8,0"
						                HorizontalAlignment="Center"
						                VerticalAlignment="Center"
						                HorizontalContentAlignment="Center"
						                VerticalContentAlignment="Center"
						                Background="{ThemeResource ExpanderChevronBackground}"
						                BorderBrush="{ThemeResource ExpanderChevronBorderBrush}"
						                BorderThickness="{ThemeResource ExpanderChevronBorderThickness}"
						                CornerRadius="{ThemeResource ControlCornerRadius}"
						                FocusVisualMargin="-3"
						                IsTabStop="False"
						                ToolTipService.ToolTip="{StaticResource SettingsExpanderChevronToolTip}"
						                UseSystemFocusVisuals="True">
							<muxc:AnimatedIcon x:Name="ExpandCollapseChevron"
							                   Width="16"
							                   Height="16"
							                   HorizontalAlignment="Center"
							                   VerticalAlignment="Center"
							                   muxc:AnimatedIcon.State="NormalOff"
							                   Foreground="{ThemeResource ExpanderChevronForeground}"
							                   RenderTransformOrigin="0.5, 0.5">
								<animatedvisuals:AnimatedChevronUpDownSmallVisualSource />
								<muxc:AnimatedIcon.FallbackIconSource>
									<muxc:FontIconSource FontFamily="{StaticResource SymbolThemeFontFamily}"
									                     FontSize="16"
									                     Glyph="{StaticResource ExpanderChevronDownGlyph}"
									                     IsTextScaleFactorEnabled="False" />
								</muxc:AnimatedIcon.FallbackIconSource>
							</muxc:AnimatedIcon>
						</ContentControl>

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
										                               Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
											                        Value="{ThemeResource ExpanderHeaderForeground}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ToggleButtonGrid"
										                               Storyboard.TargetProperty="BorderBrush">
											<DiscreteObjectKeyFrame KeyTime="0"
											                        Value="{ThemeResource SettingsCardBorderBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpandCollapseChevron"
										                               Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
											                        Value="{ThemeResource ExpanderChevronForeground}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ToggleButtonGrid"
										                               Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0"
											                        Value="{ThemeResource SettingsCardBackground}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="PointerOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
										                               Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
											                        Value="{ThemeResource ExpanderHeaderForegroundPointerOver}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ToggleButtonGrid"
										                               Storyboard.TargetProperty="BorderBrush">
											<DiscreteObjectKeyFrame KeyTime="0"
											                        Value="{ThemeResource SettingsCardBorderBrushPointerOver}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpandCollapseChevron"
										                               Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
											                        Value="{ThemeResource ExpanderChevronPointerOverForeground}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ToggleButtonGrid"
										                               Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0"
											                        Value="{ThemeResource SettingsCardBackgroundPointerOver}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
									<VisualState.Setters>
										<Setter Target="ExpandCollapseChevron.(muxc:AnimatedIcon.State)" Value="PointerOverOff" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
										                               Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
											                        Value="{ThemeResource ExpanderHeaderForegroundPressed}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ToggleButtonGrid"
										                               Storyboard.TargetProperty="BorderBrush">
											<DiscreteObjectKeyFrame KeyTime="0"
											                        Value="{ThemeResource SettingsCardBorderBrushPressed}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpandCollapseChevron"
										                               Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
											                        Value="{ThemeResource ExpanderChevronPressedForeground}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ToggleButtonGrid"
										                               Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0"
											                        Value="{ThemeResource SettingsCardBackgroundPressed}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
									<VisualState.Setters>
										<Setter Target="ExpandCollapseChevron.(muxc:AnimatedIcon.State)" Value="PressedOff" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
										                               Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
											                        Value="{ThemeResource ExpanderHeaderDisabledForeground}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ToggleButtonGrid"
										                               Storyboard.TargetProperty="BorderBrush">
											<DiscreteObjectKeyFrame KeyTime="0"
											                        Value="{ThemeResource SettingsCardBorderBrushDisabled}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpandCollapseChevron"
										                               Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
											                        Value="{ThemeResource ExpanderHeaderDisabledForeground}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Checked">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
										                               Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
											                        Value="{ThemeResource ExpanderHeaderForeground}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpandCollapseChevron"
										                               Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
											                        Value="{ThemeResource ExpanderChevronForeground}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpandCollapseChevronBorder"
										                               Storyboard.TargetProperty="BorderBrush">
											<DiscreteObjectKeyFrame KeyTime="0"
											                        Value="{ThemeResource ExpanderChevronBorderBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpandCollapseChevronBorder"
										                               Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0"
											                        Value="{ThemeResource ExpanderChevronBackground}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
									<VisualState.Setters>
										<Setter Target="ExpandCollapseChevron.(muxc:AnimatedIcon.State)" Value="NormalOn" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="CheckedPointerOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
										                               Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
											                        Value="{ThemeResource ExpanderHeaderForegroundPointerOver}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpandCollapseChevron"
										                               Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
											                        Value="{ThemeResource ExpanderChevronPointerOverForeground}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ToggleButtonGrid"
										                               Storyboard.TargetProperty="BorderBrush">
											<DiscreteObjectKeyFrame KeyTime="0"
											                        Value="{ThemeResource SettingsCardBorderBrushPointerOver}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ToggleButtonGrid"
										                               Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0"
											                        Value="{ThemeResource SettingsCardBackgroundPointerOver}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
									<VisualState.Setters>
										<Setter Target="ExpandCollapseChevron.(muxc:AnimatedIcon.State)" Value="PointerOverOn" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="CheckedPressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
										                               Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
											                        Value="{ThemeResource ExpanderHeaderForegroundPressed}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpandCollapseChevron"
										                               Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
											                        Value="{ThemeResource ExpanderChevronPressedForeground}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ToggleButtonGrid"
										                               Storyboard.TargetProperty="BorderBrush">
											<DiscreteObjectKeyFrame KeyTime="0"
											                        Value="{ThemeResource SettingsCardBorderBrushPressed}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ToggleButtonGrid"
										                               Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0"
											                        Value="{ThemeResource SettingsCardBackgroundPressed}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
									<VisualState.Setters>
										<Setter Target="ExpandCollapseChevron.(muxc:AnimatedIcon.State)" Value="PressedOn" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="CheckedDisabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
										                               Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
											                        Value="{ThemeResource ExpanderHeaderDisabledForeground}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpandCollapseChevron"
										                               Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
											                        Value="{ThemeResource ExpanderHeaderDisabledForeground}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ToggleButtonGrid"
										                               Storyboard.TargetProperty="BorderBrush">
											<DiscreteObjectKeyFrame KeyTime="0"
											                        Value="{ThemeResource SettingsCardBorderBrushDisabled}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
									<VisualState.Setters>
										<Setter Target="ExpandCollapseChevron.(muxc:AnimatedIcon.State)" Value="NormalOn" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="Indeterminate" />
								<VisualState x:Name="IndeterminatePointerOver" />
								<VisualState x:Name="IndeterminatePressed" />
								<VisualState x:Name="IndeterminateDisabled" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</Grid>

				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

</ResourceDictionary>
